//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CollectingProductionDataSystem.ConsoleClient {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AsoDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class AsoDataSet : global::System.Data.DataSet {
        
        private flow_MeasuringPointsDataDataTable tableflow_MeasuringPointsData;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AsoDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AsoDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["flow_MeasuringPointsData"] != null)) {
                    base.Tables.Add(new flow_MeasuringPointsDataDataTable(ds.Tables["flow_MeasuringPointsData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public flow_MeasuringPointsDataDataTable flow_MeasuringPointsData {
            get {
                return this.tableflow_MeasuringPointsData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            AsoDataSet cln = ((AsoDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["flow_MeasuringPointsData"] != null)) {
                    base.Tables.Add(new flow_MeasuringPointsDataDataTable(ds.Tables["flow_MeasuringPointsData"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableflow_MeasuringPointsData = ((flow_MeasuringPointsDataDataTable)(base.Tables["flow_MeasuringPointsData"]));
            if ((initTable == true)) {
                if ((this.tableflow_MeasuringPointsData != null)) {
                    this.tableflow_MeasuringPointsData.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "AsoDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/AsoDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableflow_MeasuringPointsData = new flow_MeasuringPointsDataDataTable();
            base.Tables.Add(this.tableflow_MeasuringPointsData);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeflow_MeasuringPointsData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AsoDataSet ds = new AsoDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void flow_MeasuringPointsDataRowChangeEventHandler(object sender, flow_MeasuringPointsDataRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class flow_MeasuringPointsDataDataTable : global::System.Data.TypedTableBase<flow_MeasuringPointsDataRow> {
            
            private global::System.Data.DataColumn columnSequenceNumber;
            
            private global::System.Data.DataColumn columnExciseStoreId;
            
            private global::System.Data.DataColumn columnZoneId;
            
            private global::System.Data.DataColumn columnMeasuringPointId;
            
            private global::System.Data.DataColumn columnTransactionNumber;
            
            private global::System.Data.DataColumn columnRowId;
            
            private global::System.Data.DataColumn columnBaseProductNumber;
            
            private global::System.Data.DataColumn columnBaseProductType;
            
            private global::System.Data.DataColumn columnBaseProductName;
            
            private global::System.Data.DataColumn columnProductNumber;
            
            private global::System.Data.DataColumn columnProductType;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnFlowDirection;
            
            private global::System.Data.DataColumn columnTransactionBeginTime;
            
            private global::System.Data.DataColumn columnTransactionEndTime;
            
            private global::System.Data.DataColumn columnEngineeringUnitMass;
            
            private global::System.Data.DataColumn columnEngineeringUnitVolume;
            
            private global::System.Data.DataColumn columnEngineeringUnitDensity;
            
            private global::System.Data.DataColumn columnEngineeringUnitTemperature;
            
            private global::System.Data.DataColumn columnFactorMass;
            
            private global::System.Data.DataColumn columnFactorVolume;
            
            private global::System.Data.DataColumn columnFactorDensity;
            
            private global::System.Data.DataColumn columnFactorTemperature;
            
            private global::System.Data.DataColumn columnTotalizerBeginGrossObservableVolume;
            
            private global::System.Data.DataColumn columnTotalizerEndGrossObservableVolume;
            
            private global::System.Data.DataColumn columnTotalizerBeginGrossStandardVolume;
            
            private global::System.Data.DataColumn columnTotalizerEndGrossStandardVolume;
            
            private global::System.Data.DataColumn columnTotalizerBeginMass;
            
            private global::System.Data.DataColumn columnTotalizerEndMass;
            
            private global::System.Data.DataColumn columnTotalizerBeginGrossObservableCommonVolume;
            
            private global::System.Data.DataColumn columnTotalizerEndGrossObservableCommonVolume;
            
            private global::System.Data.DataColumn columnTotalizerBeginGrossStandardCommonVolume;
            
            private global::System.Data.DataColumn columnTotalizerEndGrossStandardCommonVolume;
            
            private global::System.Data.DataColumn columnTotalizerBeginCommonMass;
            
            private global::System.Data.DataColumn columnTotalizerEndCommonMass;
            
            private global::System.Data.DataColumn columnGrossObservableVolume;
            
            private global::System.Data.DataColumn columnGrossStandardVolume;
            
            private global::System.Data.DataColumn columnMass;
            
            private global::System.Data.DataColumn columnAverageObservableDensity;
            
            private global::System.Data.DataColumn columnAverageReferenceDensity;
            
            private global::System.Data.DataColumn columnAverageTemperature;
            
            private global::System.Data.DataColumn columnTotalizerBeginGrossObservableVolumeReverse;
            
            private global::System.Data.DataColumn columnTotalizerEndGrossObservableVolumeReverse;
            
            private global::System.Data.DataColumn columnTotalizerBeginGrossStandardVolumeReverse;
            
            private global::System.Data.DataColumn columnTotalizerEndGrossStandardVolumeReverse;
            
            private global::System.Data.DataColumn columnTotalizerBeginMassReverse;
            
            private global::System.Data.DataColumn columnTotalizerEndMassReverse;
            
            private global::System.Data.DataColumn columnTotalizerBeginGrossObservableCommonVolumeReverse;
            
            private global::System.Data.DataColumn columnTotalizerEndGrossObservableCommonVolumeReverse;
            
            private global::System.Data.DataColumn columnTotalizerBeginGrossStandardCommonVolumeReverse;
            
            private global::System.Data.DataColumn columnTotalizerEndGrossStandardCommonVolumeReverse;
            
            private global::System.Data.DataColumn columnTotalizerBeginCommonMassReverse;
            
            private global::System.Data.DataColumn columnTotalizerEndCommonMassReverse;
            
            private global::System.Data.DataColumn columnGrossObservableVolumeReverse;
            
            private global::System.Data.DataColumn columnGrossStandardVolumeReverse;
            
            private global::System.Data.DataColumn columnMassReverse;
            
            private global::System.Data.DataColumn columnAverageObservableDensityReverse;
            
            private global::System.Data.DataColumn columnAverageReferenceDensityReverse;
            
            private global::System.Data.DataColumn columnAverageTemperatureReverse;
            
            private global::System.Data.DataColumn columnInsertTimestamp;
            
            private global::System.Data.DataColumn columnResultId;
            
            private global::System.Data.DataColumn columnAdditiveResultId;
            
            private global::System.Data.DataColumn columnTamasCreateTimestamp;
            
            private global::System.Data.DataColumn columnTamasRecipeTransId;
            
            private global::System.Data.DataColumn columnEpksSequenceNumber;
            
            private global::System.Data.DataColumn columnMartaRowNum;
            
            private global::System.Data.DataColumn columnAlcoholContent;
            
            private global::System.Data.DataColumn columnAlcoholContentReverse;
            
            private global::System.Data.DataColumn columnBatchId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public flow_MeasuringPointsDataDataTable() {
                this.TableName = "flow_MeasuringPointsData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal flow_MeasuringPointsDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected flow_MeasuringPointsDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SequenceNumberColumn {
                get {
                    return this.columnSequenceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExciseStoreIdColumn {
                get {
                    return this.columnExciseStoreId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZoneIdColumn {
                get {
                    return this.columnZoneId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeasuringPointIdColumn {
                get {
                    return this.columnMeasuringPointId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionNumberColumn {
                get {
                    return this.columnTransactionNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseProductNumberColumn {
                get {
                    return this.columnBaseProductNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseProductTypeColumn {
                get {
                    return this.columnBaseProductType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BaseProductNameColumn {
                get {
                    return this.columnBaseProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductNumberColumn {
                get {
                    return this.columnProductNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductTypeColumn {
                get {
                    return this.columnProductType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlowDirectionColumn {
                get {
                    return this.columnFlowDirection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionBeginTimeColumn {
                get {
                    return this.columnTransactionBeginTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TransactionEndTimeColumn {
                get {
                    return this.columnTransactionEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EngineeringUnitMassColumn {
                get {
                    return this.columnEngineeringUnitMass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EngineeringUnitVolumeColumn {
                get {
                    return this.columnEngineeringUnitVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EngineeringUnitDensityColumn {
                get {
                    return this.columnEngineeringUnitDensity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EngineeringUnitTemperatureColumn {
                get {
                    return this.columnEngineeringUnitTemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactorMassColumn {
                get {
                    return this.columnFactorMass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactorVolumeColumn {
                get {
                    return this.columnFactorVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactorDensityColumn {
                get {
                    return this.columnFactorDensity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactorTemperatureColumn {
                get {
                    return this.columnFactorTemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerBeginGrossObservableVolumeColumn {
                get {
                    return this.columnTotalizerBeginGrossObservableVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerEndGrossObservableVolumeColumn {
                get {
                    return this.columnTotalizerEndGrossObservableVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerBeginGrossStandardVolumeColumn {
                get {
                    return this.columnTotalizerBeginGrossStandardVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerEndGrossStandardVolumeColumn {
                get {
                    return this.columnTotalizerEndGrossStandardVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerBeginMassColumn {
                get {
                    return this.columnTotalizerBeginMass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerEndMassColumn {
                get {
                    return this.columnTotalizerEndMass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerBeginGrossObservableCommonVolumeColumn {
                get {
                    return this.columnTotalizerBeginGrossObservableCommonVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerEndGrossObservableCommonVolumeColumn {
                get {
                    return this.columnTotalizerEndGrossObservableCommonVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerBeginGrossStandardCommonVolumeColumn {
                get {
                    return this.columnTotalizerBeginGrossStandardCommonVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerEndGrossStandardCommonVolumeColumn {
                get {
                    return this.columnTotalizerEndGrossStandardCommonVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerBeginCommonMassColumn {
                get {
                    return this.columnTotalizerBeginCommonMass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerEndCommonMassColumn {
                get {
                    return this.columnTotalizerEndCommonMass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrossObservableVolumeColumn {
                get {
                    return this.columnGrossObservableVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrossStandardVolumeColumn {
                get {
                    return this.columnGrossStandardVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MassColumn {
                get {
                    return this.columnMass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AverageObservableDensityColumn {
                get {
                    return this.columnAverageObservableDensity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AverageReferenceDensityColumn {
                get {
                    return this.columnAverageReferenceDensity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AverageTemperatureColumn {
                get {
                    return this.columnAverageTemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerBeginGrossObservableVolumeReverseColumn {
                get {
                    return this.columnTotalizerBeginGrossObservableVolumeReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerEndGrossObservableVolumeReverseColumn {
                get {
                    return this.columnTotalizerEndGrossObservableVolumeReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerBeginGrossStandardVolumeReverseColumn {
                get {
                    return this.columnTotalizerBeginGrossStandardVolumeReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerEndGrossStandardVolumeReverseColumn {
                get {
                    return this.columnTotalizerEndGrossStandardVolumeReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerBeginMassReverseColumn {
                get {
                    return this.columnTotalizerBeginMassReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerEndMassReverseColumn {
                get {
                    return this.columnTotalizerEndMassReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerBeginGrossObservableCommonVolumeReverseColumn {
                get {
                    return this.columnTotalizerBeginGrossObservableCommonVolumeReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerEndGrossObservableCommonVolumeReverseColumn {
                get {
                    return this.columnTotalizerEndGrossObservableCommonVolumeReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerBeginGrossStandardCommonVolumeReverseColumn {
                get {
                    return this.columnTotalizerBeginGrossStandardCommonVolumeReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerEndGrossStandardCommonVolumeReverseColumn {
                get {
                    return this.columnTotalizerEndGrossStandardCommonVolumeReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerBeginCommonMassReverseColumn {
                get {
                    return this.columnTotalizerBeginCommonMassReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalizerEndCommonMassReverseColumn {
                get {
                    return this.columnTotalizerEndCommonMassReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrossObservableVolumeReverseColumn {
                get {
                    return this.columnGrossObservableVolumeReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrossStandardVolumeReverseColumn {
                get {
                    return this.columnGrossStandardVolumeReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MassReverseColumn {
                get {
                    return this.columnMassReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AverageObservableDensityReverseColumn {
                get {
                    return this.columnAverageObservableDensityReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AverageReferenceDensityReverseColumn {
                get {
                    return this.columnAverageReferenceDensityReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AverageTemperatureReverseColumn {
                get {
                    return this.columnAverageTemperatureReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsertTimestampColumn {
                get {
                    return this.columnInsertTimestamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResultIdColumn {
                get {
                    return this.columnResultId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdditiveResultIdColumn {
                get {
                    return this.columnAdditiveResultId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TamasCreateTimestampColumn {
                get {
                    return this.columnTamasCreateTimestamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TamasRecipeTransIdColumn {
                get {
                    return this.columnTamasRecipeTransId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EpksSequenceNumberColumn {
                get {
                    return this.columnEpksSequenceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MartaRowNumColumn {
                get {
                    return this.columnMartaRowNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlcoholContentColumn {
                get {
                    return this.columnAlcoholContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AlcoholContentReverseColumn {
                get {
                    return this.columnAlcoholContentReverse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BatchIdColumn {
                get {
                    return this.columnBatchId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public flow_MeasuringPointsDataRow this[int index] {
                get {
                    return ((flow_MeasuringPointsDataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event flow_MeasuringPointsDataRowChangeEventHandler flow_MeasuringPointsDataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event flow_MeasuringPointsDataRowChangeEventHandler flow_MeasuringPointsDataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event flow_MeasuringPointsDataRowChangeEventHandler flow_MeasuringPointsDataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event flow_MeasuringPointsDataRowChangeEventHandler flow_MeasuringPointsDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addflow_MeasuringPointsDataRow(flow_MeasuringPointsDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public flow_MeasuringPointsDataRow Addflow_MeasuringPointsDataRow(
                        string ExciseStoreId, 
                        int ZoneId, 
                        int MeasuringPointId, 
                        long TransactionNumber, 
                        int RowId, 
                        int BaseProductNumber, 
                        int BaseProductType, 
                        string BaseProductName, 
                        int ProductNumber, 
                        int ProductType, 
                        string ProductName, 
                        int FlowDirection, 
                        System.DateTime TransactionBeginTime, 
                        System.DateTime TransactionEndTime, 
                        string EngineeringUnitMass, 
                        string EngineeringUnitVolume, 
                        string EngineeringUnitDensity, 
                        string EngineeringUnitTemperature, 
                        decimal FactorMass, 
                        decimal FactorVolume, 
                        decimal FactorDensity, 
                        decimal FactorTemperature, 
                        decimal TotalizerBeginGrossObservableVolume, 
                        decimal TotalizerEndGrossObservableVolume, 
                        decimal TotalizerBeginGrossStandardVolume, 
                        decimal TotalizerEndGrossStandardVolume, 
                        decimal TotalizerBeginMass, 
                        decimal TotalizerEndMass, 
                        decimal TotalizerBeginGrossObservableCommonVolume, 
                        decimal TotalizerEndGrossObservableCommonVolume, 
                        decimal TotalizerBeginGrossStandardCommonVolume, 
                        decimal TotalizerEndGrossStandardCommonVolume, 
                        decimal TotalizerBeginCommonMass, 
                        decimal TotalizerEndCommonMass, 
                        decimal GrossObservableVolume, 
                        decimal GrossStandardVolume, 
                        decimal Mass, 
                        decimal AverageObservableDensity, 
                        decimal AverageReferenceDensity, 
                        decimal AverageTemperature, 
                        decimal TotalizerBeginGrossObservableVolumeReverse, 
                        decimal TotalizerEndGrossObservableVolumeReverse, 
                        decimal TotalizerBeginGrossStandardVolumeReverse, 
                        decimal TotalizerEndGrossStandardVolumeReverse, 
                        decimal TotalizerBeginMassReverse, 
                        decimal TotalizerEndMassReverse, 
                        decimal TotalizerBeginGrossObservableCommonVolumeReverse, 
                        decimal TotalizerEndGrossObservableCommonVolumeReverse, 
                        decimal TotalizerBeginGrossStandardCommonVolumeReverse, 
                        decimal TotalizerEndGrossStandardCommonVolumeReverse, 
                        decimal TotalizerBeginCommonMassReverse, 
                        decimal TotalizerEndCommonMassReverse, 
                        decimal GrossObservableVolumeReverse, 
                        decimal GrossStandardVolumeReverse, 
                        decimal MassReverse, 
                        decimal AverageObservableDensityReverse, 
                        decimal AverageReferenceDensityReverse, 
                        decimal AverageTemperatureReverse, 
                        System.DateTime InsertTimestamp, 
                        long ResultId, 
                        long AdditiveResultId, 
                        System.DateTime TamasCreateTimestamp, 
                        string TamasRecipeTransId, 
                        long EpksSequenceNumber, 
                        long MartaRowNum, 
                        decimal AlcoholContent, 
                        decimal AlcoholContentReverse, 
                        long BatchId) {
                flow_MeasuringPointsDataRow rowflow_MeasuringPointsDataRow = ((flow_MeasuringPointsDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ExciseStoreId,
                        ZoneId,
                        MeasuringPointId,
                        TransactionNumber,
                        RowId,
                        BaseProductNumber,
                        BaseProductType,
                        BaseProductName,
                        ProductNumber,
                        ProductType,
                        ProductName,
                        FlowDirection,
                        TransactionBeginTime,
                        TransactionEndTime,
                        EngineeringUnitMass,
                        EngineeringUnitVolume,
                        EngineeringUnitDensity,
                        EngineeringUnitTemperature,
                        FactorMass,
                        FactorVolume,
                        FactorDensity,
                        FactorTemperature,
                        TotalizerBeginGrossObservableVolume,
                        TotalizerEndGrossObservableVolume,
                        TotalizerBeginGrossStandardVolume,
                        TotalizerEndGrossStandardVolume,
                        TotalizerBeginMass,
                        TotalizerEndMass,
                        TotalizerBeginGrossObservableCommonVolume,
                        TotalizerEndGrossObservableCommonVolume,
                        TotalizerBeginGrossStandardCommonVolume,
                        TotalizerEndGrossStandardCommonVolume,
                        TotalizerBeginCommonMass,
                        TotalizerEndCommonMass,
                        GrossObservableVolume,
                        GrossStandardVolume,
                        Mass,
                        AverageObservableDensity,
                        AverageReferenceDensity,
                        AverageTemperature,
                        TotalizerBeginGrossObservableVolumeReverse,
                        TotalizerEndGrossObservableVolumeReverse,
                        TotalizerBeginGrossStandardVolumeReverse,
                        TotalizerEndGrossStandardVolumeReverse,
                        TotalizerBeginMassReverse,
                        TotalizerEndMassReverse,
                        TotalizerBeginGrossObservableCommonVolumeReverse,
                        TotalizerEndGrossObservableCommonVolumeReverse,
                        TotalizerBeginGrossStandardCommonVolumeReverse,
                        TotalizerEndGrossStandardCommonVolumeReverse,
                        TotalizerBeginCommonMassReverse,
                        TotalizerEndCommonMassReverse,
                        GrossObservableVolumeReverse,
                        GrossStandardVolumeReverse,
                        MassReverse,
                        AverageObservableDensityReverse,
                        AverageReferenceDensityReverse,
                        AverageTemperatureReverse,
                        InsertTimestamp,
                        ResultId,
                        AdditiveResultId,
                        TamasCreateTimestamp,
                        TamasRecipeTransId,
                        EpksSequenceNumber,
                        MartaRowNum,
                        AlcoholContent,
                        AlcoholContentReverse,
                        BatchId};
                rowflow_MeasuringPointsDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowflow_MeasuringPointsDataRow);
                return rowflow_MeasuringPointsDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public flow_MeasuringPointsDataRow FindByMeasuringPointIdTransactionNumberRowIdTransactionBeginTimeTransactionEndTime(int MeasuringPointId, long TransactionNumber, int RowId, System.DateTime TransactionBeginTime, System.DateTime TransactionEndTime) {
                return ((flow_MeasuringPointsDataRow)(this.Rows.Find(new object[] {
                            MeasuringPointId,
                            TransactionNumber,
                            RowId,
                            TransactionBeginTime,
                            TransactionEndTime})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                flow_MeasuringPointsDataDataTable cln = ((flow_MeasuringPointsDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new flow_MeasuringPointsDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSequenceNumber = base.Columns["SequenceNumber"];
                this.columnExciseStoreId = base.Columns["ExciseStoreId"];
                this.columnZoneId = base.Columns["ZoneId"];
                this.columnMeasuringPointId = base.Columns["MeasuringPointId"];
                this.columnTransactionNumber = base.Columns["TransactionNumber"];
                this.columnRowId = base.Columns["RowId"];
                this.columnBaseProductNumber = base.Columns["BaseProductNumber"];
                this.columnBaseProductType = base.Columns["BaseProductType"];
                this.columnBaseProductName = base.Columns["BaseProductName"];
                this.columnProductNumber = base.Columns["ProductNumber"];
                this.columnProductType = base.Columns["ProductType"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnFlowDirection = base.Columns["FlowDirection"];
                this.columnTransactionBeginTime = base.Columns["TransactionBeginTime"];
                this.columnTransactionEndTime = base.Columns["TransactionEndTime"];
                this.columnEngineeringUnitMass = base.Columns["EngineeringUnitMass"];
                this.columnEngineeringUnitVolume = base.Columns["EngineeringUnitVolume"];
                this.columnEngineeringUnitDensity = base.Columns["EngineeringUnitDensity"];
                this.columnEngineeringUnitTemperature = base.Columns["EngineeringUnitTemperature"];
                this.columnFactorMass = base.Columns["FactorMass"];
                this.columnFactorVolume = base.Columns["FactorVolume"];
                this.columnFactorDensity = base.Columns["FactorDensity"];
                this.columnFactorTemperature = base.Columns["FactorTemperature"];
                this.columnTotalizerBeginGrossObservableVolume = base.Columns["TotalizerBeginGrossObservableVolume"];
                this.columnTotalizerEndGrossObservableVolume = base.Columns["TotalizerEndGrossObservableVolume"];
                this.columnTotalizerBeginGrossStandardVolume = base.Columns["TotalizerBeginGrossStandardVolume"];
                this.columnTotalizerEndGrossStandardVolume = base.Columns["TotalizerEndGrossStandardVolume"];
                this.columnTotalizerBeginMass = base.Columns["TotalizerBeginMass"];
                this.columnTotalizerEndMass = base.Columns["TotalizerEndMass"];
                this.columnTotalizerBeginGrossObservableCommonVolume = base.Columns["TotalizerBeginGrossObservableCommonVolume"];
                this.columnTotalizerEndGrossObservableCommonVolume = base.Columns["TotalizerEndGrossObservableCommonVolume"];
                this.columnTotalizerBeginGrossStandardCommonVolume = base.Columns["TotalizerBeginGrossStandardCommonVolume"];
                this.columnTotalizerEndGrossStandardCommonVolume = base.Columns["TotalizerEndGrossStandardCommonVolume"];
                this.columnTotalizerBeginCommonMass = base.Columns["TotalizerBeginCommonMass"];
                this.columnTotalizerEndCommonMass = base.Columns["TotalizerEndCommonMass"];
                this.columnGrossObservableVolume = base.Columns["GrossObservableVolume"];
                this.columnGrossStandardVolume = base.Columns["GrossStandardVolume"];
                this.columnMass = base.Columns["Mass"];
                this.columnAverageObservableDensity = base.Columns["AverageObservableDensity"];
                this.columnAverageReferenceDensity = base.Columns["AverageReferenceDensity"];
                this.columnAverageTemperature = base.Columns["AverageTemperature"];
                this.columnTotalizerBeginGrossObservableVolumeReverse = base.Columns["TotalizerBeginGrossObservableVolumeReverse"];
                this.columnTotalizerEndGrossObservableVolumeReverse = base.Columns["TotalizerEndGrossObservableVolumeReverse"];
                this.columnTotalizerBeginGrossStandardVolumeReverse = base.Columns["TotalizerBeginGrossStandardVolumeReverse"];
                this.columnTotalizerEndGrossStandardVolumeReverse = base.Columns["TotalizerEndGrossStandardVolumeReverse"];
                this.columnTotalizerBeginMassReverse = base.Columns["TotalizerBeginMassReverse"];
                this.columnTotalizerEndMassReverse = base.Columns["TotalizerEndMassReverse"];
                this.columnTotalizerBeginGrossObservableCommonVolumeReverse = base.Columns["TotalizerBeginGrossObservableCommonVolumeReverse"];
                this.columnTotalizerEndGrossObservableCommonVolumeReverse = base.Columns["TotalizerEndGrossObservableCommonVolumeReverse"];
                this.columnTotalizerBeginGrossStandardCommonVolumeReverse = base.Columns["TotalizerBeginGrossStandardCommonVolumeReverse"];
                this.columnTotalizerEndGrossStandardCommonVolumeReverse = base.Columns["TotalizerEndGrossStandardCommonVolumeReverse"];
                this.columnTotalizerBeginCommonMassReverse = base.Columns["TotalizerBeginCommonMassReverse"];
                this.columnTotalizerEndCommonMassReverse = base.Columns["TotalizerEndCommonMassReverse"];
                this.columnGrossObservableVolumeReverse = base.Columns["GrossObservableVolumeReverse"];
                this.columnGrossStandardVolumeReverse = base.Columns["GrossStandardVolumeReverse"];
                this.columnMassReverse = base.Columns["MassReverse"];
                this.columnAverageObservableDensityReverse = base.Columns["AverageObservableDensityReverse"];
                this.columnAverageReferenceDensityReverse = base.Columns["AverageReferenceDensityReverse"];
                this.columnAverageTemperatureReverse = base.Columns["AverageTemperatureReverse"];
                this.columnInsertTimestamp = base.Columns["InsertTimestamp"];
                this.columnResultId = base.Columns["ResultId"];
                this.columnAdditiveResultId = base.Columns["AdditiveResultId"];
                this.columnTamasCreateTimestamp = base.Columns["TamasCreateTimestamp"];
                this.columnTamasRecipeTransId = base.Columns["TamasRecipeTransId"];
                this.columnEpksSequenceNumber = base.Columns["EpksSequenceNumber"];
                this.columnMartaRowNum = base.Columns["MartaRowNum"];
                this.columnAlcoholContent = base.Columns["AlcoholContent"];
                this.columnAlcoholContentReverse = base.Columns["AlcoholContentReverse"];
                this.columnBatchId = base.Columns["BatchId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSequenceNumber = new global::System.Data.DataColumn("SequenceNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequenceNumber);
                this.columnExciseStoreId = new global::System.Data.DataColumn("ExciseStoreId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseStoreId);
                this.columnZoneId = new global::System.Data.DataColumn("ZoneId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneId);
                this.columnMeasuringPointId = new global::System.Data.DataColumn("MeasuringPointId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasuringPointId);
                this.columnTransactionNumber = new global::System.Data.DataColumn("TransactionNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionNumber);
                this.columnRowId = new global::System.Data.DataColumn("RowId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowId);
                this.columnBaseProductNumber = new global::System.Data.DataColumn("BaseProductNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseProductNumber);
                this.columnBaseProductType = new global::System.Data.DataColumn("BaseProductType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseProductType);
                this.columnBaseProductName = new global::System.Data.DataColumn("BaseProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBaseProductName);
                this.columnProductNumber = new global::System.Data.DataColumn("ProductNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductNumber);
                this.columnProductType = new global::System.Data.DataColumn("ProductType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductType);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnFlowDirection = new global::System.Data.DataColumn("FlowDirection", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowDirection);
                this.columnTransactionBeginTime = new global::System.Data.DataColumn("TransactionBeginTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionBeginTime);
                this.columnTransactionEndTime = new global::System.Data.DataColumn("TransactionEndTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionEndTime);
                this.columnEngineeringUnitMass = new global::System.Data.DataColumn("EngineeringUnitMass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngineeringUnitMass);
                this.columnEngineeringUnitVolume = new global::System.Data.DataColumn("EngineeringUnitVolume", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngineeringUnitVolume);
                this.columnEngineeringUnitDensity = new global::System.Data.DataColumn("EngineeringUnitDensity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngineeringUnitDensity);
                this.columnEngineeringUnitTemperature = new global::System.Data.DataColumn("EngineeringUnitTemperature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngineeringUnitTemperature);
                this.columnFactorMass = new global::System.Data.DataColumn("FactorMass", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactorMass);
                this.columnFactorVolume = new global::System.Data.DataColumn("FactorVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactorVolume);
                this.columnFactorDensity = new global::System.Data.DataColumn("FactorDensity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactorDensity);
                this.columnFactorTemperature = new global::System.Data.DataColumn("FactorTemperature", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactorTemperature);
                this.columnTotalizerBeginGrossObservableVolume = new global::System.Data.DataColumn("TotalizerBeginGrossObservableVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerBeginGrossObservableVolume);
                this.columnTotalizerEndGrossObservableVolume = new global::System.Data.DataColumn("TotalizerEndGrossObservableVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerEndGrossObservableVolume);
                this.columnTotalizerBeginGrossStandardVolume = new global::System.Data.DataColumn("TotalizerBeginGrossStandardVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerBeginGrossStandardVolume);
                this.columnTotalizerEndGrossStandardVolume = new global::System.Data.DataColumn("TotalizerEndGrossStandardVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerEndGrossStandardVolume);
                this.columnTotalizerBeginMass = new global::System.Data.DataColumn("TotalizerBeginMass", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerBeginMass);
                this.columnTotalizerEndMass = new global::System.Data.DataColumn("TotalizerEndMass", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerEndMass);
                this.columnTotalizerBeginGrossObservableCommonVolume = new global::System.Data.DataColumn("TotalizerBeginGrossObservableCommonVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerBeginGrossObservableCommonVolume);
                this.columnTotalizerEndGrossObservableCommonVolume = new global::System.Data.DataColumn("TotalizerEndGrossObservableCommonVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerEndGrossObservableCommonVolume);
                this.columnTotalizerBeginGrossStandardCommonVolume = new global::System.Data.DataColumn("TotalizerBeginGrossStandardCommonVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerBeginGrossStandardCommonVolume);
                this.columnTotalizerEndGrossStandardCommonVolume = new global::System.Data.DataColumn("TotalizerEndGrossStandardCommonVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerEndGrossStandardCommonVolume);
                this.columnTotalizerBeginCommonMass = new global::System.Data.DataColumn("TotalizerBeginCommonMass", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerBeginCommonMass);
                this.columnTotalizerEndCommonMass = new global::System.Data.DataColumn("TotalizerEndCommonMass", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerEndCommonMass);
                this.columnGrossObservableVolume = new global::System.Data.DataColumn("GrossObservableVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossObservableVolume);
                this.columnGrossStandardVolume = new global::System.Data.DataColumn("GrossStandardVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossStandardVolume);
                this.columnMass = new global::System.Data.DataColumn("Mass", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMass);
                this.columnAverageObservableDensity = new global::System.Data.DataColumn("AverageObservableDensity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageObservableDensity);
                this.columnAverageReferenceDensity = new global::System.Data.DataColumn("AverageReferenceDensity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageReferenceDensity);
                this.columnAverageTemperature = new global::System.Data.DataColumn("AverageTemperature", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageTemperature);
                this.columnTotalizerBeginGrossObservableVolumeReverse = new global::System.Data.DataColumn("TotalizerBeginGrossObservableVolumeReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerBeginGrossObservableVolumeReverse);
                this.columnTotalizerEndGrossObservableVolumeReverse = new global::System.Data.DataColumn("TotalizerEndGrossObservableVolumeReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerEndGrossObservableVolumeReverse);
                this.columnTotalizerBeginGrossStandardVolumeReverse = new global::System.Data.DataColumn("TotalizerBeginGrossStandardVolumeReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerBeginGrossStandardVolumeReverse);
                this.columnTotalizerEndGrossStandardVolumeReverse = new global::System.Data.DataColumn("TotalizerEndGrossStandardVolumeReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerEndGrossStandardVolumeReverse);
                this.columnTotalizerBeginMassReverse = new global::System.Data.DataColumn("TotalizerBeginMassReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerBeginMassReverse);
                this.columnTotalizerEndMassReverse = new global::System.Data.DataColumn("TotalizerEndMassReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerEndMassReverse);
                this.columnTotalizerBeginGrossObservableCommonVolumeReverse = new global::System.Data.DataColumn("TotalizerBeginGrossObservableCommonVolumeReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerBeginGrossObservableCommonVolumeReverse);
                this.columnTotalizerEndGrossObservableCommonVolumeReverse = new global::System.Data.DataColumn("TotalizerEndGrossObservableCommonVolumeReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerEndGrossObservableCommonVolumeReverse);
                this.columnTotalizerBeginGrossStandardCommonVolumeReverse = new global::System.Data.DataColumn("TotalizerBeginGrossStandardCommonVolumeReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerBeginGrossStandardCommonVolumeReverse);
                this.columnTotalizerEndGrossStandardCommonVolumeReverse = new global::System.Data.DataColumn("TotalizerEndGrossStandardCommonVolumeReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerEndGrossStandardCommonVolumeReverse);
                this.columnTotalizerBeginCommonMassReverse = new global::System.Data.DataColumn("TotalizerBeginCommonMassReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerBeginCommonMassReverse);
                this.columnTotalizerEndCommonMassReverse = new global::System.Data.DataColumn("TotalizerEndCommonMassReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalizerEndCommonMassReverse);
                this.columnGrossObservableVolumeReverse = new global::System.Data.DataColumn("GrossObservableVolumeReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossObservableVolumeReverse);
                this.columnGrossStandardVolumeReverse = new global::System.Data.DataColumn("GrossStandardVolumeReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrossStandardVolumeReverse);
                this.columnMassReverse = new global::System.Data.DataColumn("MassReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMassReverse);
                this.columnAverageObservableDensityReverse = new global::System.Data.DataColumn("AverageObservableDensityReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageObservableDensityReverse);
                this.columnAverageReferenceDensityReverse = new global::System.Data.DataColumn("AverageReferenceDensityReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageReferenceDensityReverse);
                this.columnAverageTemperatureReverse = new global::System.Data.DataColumn("AverageTemperatureReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageTemperatureReverse);
                this.columnInsertTimestamp = new global::System.Data.DataColumn("InsertTimestamp", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsertTimestamp);
                this.columnResultId = new global::System.Data.DataColumn("ResultId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResultId);
                this.columnAdditiveResultId = new global::System.Data.DataColumn("AdditiveResultId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdditiveResultId);
                this.columnTamasCreateTimestamp = new global::System.Data.DataColumn("TamasCreateTimestamp", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTamasCreateTimestamp);
                this.columnTamasRecipeTransId = new global::System.Data.DataColumn("TamasRecipeTransId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTamasRecipeTransId);
                this.columnEpksSequenceNumber = new global::System.Data.DataColumn("EpksSequenceNumber", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEpksSequenceNumber);
                this.columnMartaRowNum = new global::System.Data.DataColumn("MartaRowNum", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMartaRowNum);
                this.columnAlcoholContent = new global::System.Data.DataColumn("AlcoholContent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlcoholContent);
                this.columnAlcoholContentReverse = new global::System.Data.DataColumn("AlcoholContentReverse", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlcoholContentReverse);
                this.columnBatchId = new global::System.Data.DataColumn("BatchId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMeasuringPointId,
                                this.columnTransactionNumber,
                                this.columnRowId,
                                this.columnTransactionBeginTime,
                                this.columnTransactionEndTime}, true));
                this.columnSequenceNumber.AutoIncrement = true;
                this.columnSequenceNumber.AutoIncrementSeed = -1;
                this.columnSequenceNumber.AutoIncrementStep = -1;
                this.columnSequenceNumber.AllowDBNull = false;
                this.columnSequenceNumber.ReadOnly = true;
                this.columnExciseStoreId.MaxLength = 50;
                this.columnZoneId.AllowDBNull = false;
                this.columnMeasuringPointId.AllowDBNull = false;
                this.columnTransactionNumber.AllowDBNull = false;
                this.columnRowId.AllowDBNull = false;
                this.columnBaseProductName.MaxLength = 150;
                this.columnProductName.MaxLength = 150;
                this.columnTransactionBeginTime.AllowDBNull = false;
                this.columnTransactionEndTime.AllowDBNull = false;
                this.columnEngineeringUnitMass.MaxLength = 50;
                this.columnEngineeringUnitVolume.MaxLength = 50;
                this.columnEngineeringUnitDensity.MaxLength = 50;
                this.columnEngineeringUnitTemperature.MaxLength = 50;
                this.columnInsertTimestamp.AllowDBNull = false;
                this.columnTamasRecipeTransId.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public flow_MeasuringPointsDataRow Newflow_MeasuringPointsDataRow() {
                return ((flow_MeasuringPointsDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new flow_MeasuringPointsDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(flow_MeasuringPointsDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.flow_MeasuringPointsDataRowChanged != null)) {
                    this.flow_MeasuringPointsDataRowChanged(this, new flow_MeasuringPointsDataRowChangeEvent(((flow_MeasuringPointsDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.flow_MeasuringPointsDataRowChanging != null)) {
                    this.flow_MeasuringPointsDataRowChanging(this, new flow_MeasuringPointsDataRowChangeEvent(((flow_MeasuringPointsDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.flow_MeasuringPointsDataRowDeleted != null)) {
                    this.flow_MeasuringPointsDataRowDeleted(this, new flow_MeasuringPointsDataRowChangeEvent(((flow_MeasuringPointsDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.flow_MeasuringPointsDataRowDeleting != null)) {
                    this.flow_MeasuringPointsDataRowDeleting(this, new flow_MeasuringPointsDataRowChangeEvent(((flow_MeasuringPointsDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeflow_MeasuringPointsDataRow(flow_MeasuringPointsDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AsoDataSet ds = new AsoDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "flow_MeasuringPointsDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class flow_MeasuringPointsDataRow : global::System.Data.DataRow {
            
            private flow_MeasuringPointsDataDataTable tableflow_MeasuringPointsData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal flow_MeasuringPointsDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableflow_MeasuringPointsData = ((flow_MeasuringPointsDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long SequenceNumber {
                get {
                    return ((long)(this[this.tableflow_MeasuringPointsData.SequenceNumberColumn]));
                }
                set {
                    this[this.tableflow_MeasuringPointsData.SequenceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExciseStoreId {
                get {
                    try {
                        return ((string)(this[this.tableflow_MeasuringPointsData.ExciseStoreIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseStoreId\' in table \'flow_MeasuringPointsData\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.ExciseStoreIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ZoneId {
                get {
                    return ((int)(this[this.tableflow_MeasuringPointsData.ZoneIdColumn]));
                }
                set {
                    this[this.tableflow_MeasuringPointsData.ZoneIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MeasuringPointId {
                get {
                    return ((int)(this[this.tableflow_MeasuringPointsData.MeasuringPointIdColumn]));
                }
                set {
                    this[this.tableflow_MeasuringPointsData.MeasuringPointIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long TransactionNumber {
                get {
                    return ((long)(this[this.tableflow_MeasuringPointsData.TransactionNumberColumn]));
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TransactionNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RowId {
                get {
                    return ((int)(this[this.tableflow_MeasuringPointsData.RowIdColumn]));
                }
                set {
                    this[this.tableflow_MeasuringPointsData.RowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BaseProductNumber {
                get {
                    try {
                        return ((int)(this[this.tableflow_MeasuringPointsData.BaseProductNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseProductNumber\' in table \'flow_MeasuringPointsData\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.BaseProductNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BaseProductType {
                get {
                    try {
                        return ((int)(this[this.tableflow_MeasuringPointsData.BaseProductTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseProductType\' in table \'flow_MeasuringPointsData\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.BaseProductTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BaseProductName {
                get {
                    try {
                        return ((string)(this[this.tableflow_MeasuringPointsData.BaseProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BaseProductName\' in table \'flow_MeasuringPointsData\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.BaseProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductNumber {
                get {
                    try {
                        return ((int)(this[this.tableflow_MeasuringPointsData.ProductNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductNumber\' in table \'flow_MeasuringPointsData\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.ProductNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProductType {
                get {
                    try {
                        return ((int)(this[this.tableflow_MeasuringPointsData.ProductTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductType\' in table \'flow_MeasuringPointsData\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.ProductTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableflow_MeasuringPointsData.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'flow_MeasuringPointsData\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FlowDirection {
                get {
                    try {
                        return ((int)(this[this.tableflow_MeasuringPointsData.FlowDirectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FlowDirection\' in table \'flow_MeasuringPointsData\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.FlowDirectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TransactionBeginTime {
                get {
                    return ((global::System.DateTime)(this[this.tableflow_MeasuringPointsData.TransactionBeginTimeColumn]));
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TransactionBeginTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TransactionEndTime {
                get {
                    return ((global::System.DateTime)(this[this.tableflow_MeasuringPointsData.TransactionEndTimeColumn]));
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TransactionEndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EngineeringUnitMass {
                get {
                    try {
                        return ((string)(this[this.tableflow_MeasuringPointsData.EngineeringUnitMassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngineeringUnitMass\' in table \'flow_MeasuringPointsData\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.EngineeringUnitMassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EngineeringUnitVolume {
                get {
                    try {
                        return ((string)(this[this.tableflow_MeasuringPointsData.EngineeringUnitVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngineeringUnitVolume\' in table \'flow_MeasuringPointsData\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.EngineeringUnitVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EngineeringUnitDensity {
                get {
                    try {
                        return ((string)(this[this.tableflow_MeasuringPointsData.EngineeringUnitDensityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngineeringUnitDensity\' in table \'flow_MeasuringPointsData\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.EngineeringUnitDensityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EngineeringUnitTemperature {
                get {
                    try {
                        return ((string)(this[this.tableflow_MeasuringPointsData.EngineeringUnitTemperatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngineeringUnitTemperature\' in table \'flow_MeasuringPointsD" +
                                "ata\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.EngineeringUnitTemperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FactorMass {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.FactorMassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactorMass\' in table \'flow_MeasuringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.FactorMassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FactorVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.FactorVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactorVolume\' in table \'flow_MeasuringPointsData\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.FactorVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FactorDensity {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.FactorDensityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactorDensity\' in table \'flow_MeasuringPointsData\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.FactorDensityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FactorTemperature {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.FactorTemperatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactorTemperature\' in table \'flow_MeasuringPointsData\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.FactorTemperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerBeginGrossObservableVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerBeginGrossObservableVolume\' in table \'flow_Measuri" +
                                "ngPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerEndGrossObservableVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerEndGrossObservableVolume\' in table \'flow_Measuring" +
                                "PointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerBeginGrossStandardVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerBeginGrossStandardVolume\' in table \'flow_Measuring" +
                                "PointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerEndGrossStandardVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerEndGrossStandardVolume\' in table \'flow_MeasuringPo" +
                                "intsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerBeginMass {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerBeginMassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerBeginMass\' in table \'flow_MeasuringPointsData\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerBeginMassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerEndMass {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerEndMassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerEndMass\' in table \'flow_MeasuringPointsData\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerEndMassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerBeginGrossObservableCommonVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableCommonVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerBeginGrossObservableCommonVolume\' in table \'flow_M" +
                                "easuringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableCommonVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerEndGrossObservableCommonVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableCommonVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerEndGrossObservableCommonVolume\' in table \'flow_Mea" +
                                "suringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableCommonVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerBeginGrossStandardCommonVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardCommonVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerBeginGrossStandardCommonVolume\' in table \'flow_Mea" +
                                "suringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardCommonVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerEndGrossStandardCommonVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardCommonVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerEndGrossStandardCommonVolume\' in table \'flow_Measu" +
                                "ringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardCommonVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerBeginCommonMass {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerBeginCommonMassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerBeginCommonMass\' in table \'flow_MeasuringPointsDat" +
                                "a\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerBeginCommonMassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerEndCommonMass {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerEndCommonMassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerEndCommonMass\' in table \'flow_MeasuringPointsData\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerEndCommonMassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GrossObservableVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.GrossObservableVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossObservableVolume\' in table \'flow_MeasuringPointsData\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.GrossObservableVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GrossStandardVolume {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.GrossStandardVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossStandardVolume\' in table \'flow_MeasuringPointsData\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.GrossStandardVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Mass {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.MassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mass\' in table \'flow_MeasuringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.MassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AverageObservableDensity {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.AverageObservableDensityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AverageObservableDensity\' in table \'flow_MeasuringPointsDat" +
                                "a\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.AverageObservableDensityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AverageReferenceDensity {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.AverageReferenceDensityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AverageReferenceDensity\' in table \'flow_MeasuringPointsData" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.AverageReferenceDensityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AverageTemperature {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.AverageTemperatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AverageTemperature\' in table \'flow_MeasuringPointsData\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.AverageTemperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerBeginGrossObservableVolumeReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableVolumeReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerBeginGrossObservableVolumeReverse\' in table \'flow_" +
                                "MeasuringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableVolumeReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerEndGrossObservableVolumeReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableVolumeReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerEndGrossObservableVolumeReverse\' in table \'flow_Me" +
                                "asuringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableVolumeReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerBeginGrossStandardVolumeReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardVolumeReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerBeginGrossStandardVolumeReverse\' in table \'flow_Me" +
                                "asuringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardVolumeReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerEndGrossStandardVolumeReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardVolumeReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerEndGrossStandardVolumeReverse\' in table \'flow_Meas" +
                                "uringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardVolumeReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerBeginMassReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerBeginMassReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerBeginMassReverse\' in table \'flow_MeasuringPointsDa" +
                                "ta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerBeginMassReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerEndMassReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerEndMassReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerEndMassReverse\' in table \'flow_MeasuringPointsData" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerEndMassReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerBeginGrossObservableCommonVolumeReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableCommonVolumeReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerBeginGrossObservableCommonVolumeReverse\' in table " +
                                "\'flow_MeasuringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableCommonVolumeReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerEndGrossObservableCommonVolumeReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableCommonVolumeReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerEndGrossObservableCommonVolumeReverse\' in table \'f" +
                                "low_MeasuringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableCommonVolumeReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerBeginGrossStandardCommonVolumeReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardCommonVolumeReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerBeginGrossStandardCommonVolumeReverse\' in table \'f" +
                                "low_MeasuringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardCommonVolumeReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerEndGrossStandardCommonVolumeReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardCommonVolumeReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerEndGrossStandardCommonVolumeReverse\' in table \'flo" +
                                "w_MeasuringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardCommonVolumeReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerBeginCommonMassReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerBeginCommonMassReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerBeginCommonMassReverse\' in table \'flow_MeasuringPo" +
                                "intsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerBeginCommonMassReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalizerEndCommonMassReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.TotalizerEndCommonMassReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalizerEndCommonMassReverse\' in table \'flow_MeasuringPoin" +
                                "tsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TotalizerEndCommonMassReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GrossObservableVolumeReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.GrossObservableVolumeReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossObservableVolumeReverse\' in table \'flow_MeasuringPoint" +
                                "sData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.GrossObservableVolumeReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GrossStandardVolumeReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.GrossStandardVolumeReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrossStandardVolumeReverse\' in table \'flow_MeasuringPointsD" +
                                "ata\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.GrossStandardVolumeReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MassReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.MassReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MassReverse\' in table \'flow_MeasuringPointsData\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.MassReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AverageObservableDensityReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.AverageObservableDensityReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AverageObservableDensityReverse\' in table \'flow_MeasuringPo" +
                                "intsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.AverageObservableDensityReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AverageReferenceDensityReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.AverageReferenceDensityReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AverageReferenceDensityReverse\' in table \'flow_MeasuringPoi" +
                                "ntsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.AverageReferenceDensityReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AverageTemperatureReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.AverageTemperatureReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AverageTemperatureReverse\' in table \'flow_MeasuringPointsDa" +
                                "ta\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.AverageTemperatureReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InsertTimestamp {
                get {
                    return ((global::System.DateTime)(this[this.tableflow_MeasuringPointsData.InsertTimestampColumn]));
                }
                set {
                    this[this.tableflow_MeasuringPointsData.InsertTimestampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ResultId {
                get {
                    try {
                        return ((long)(this[this.tableflow_MeasuringPointsData.ResultIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResultId\' in table \'flow_MeasuringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.ResultIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AdditiveResultId {
                get {
                    try {
                        return ((long)(this[this.tableflow_MeasuringPointsData.AdditiveResultIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdditiveResultId\' in table \'flow_MeasuringPointsData\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.AdditiveResultIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TamasCreateTimestamp {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableflow_MeasuringPointsData.TamasCreateTimestampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TamasCreateTimestamp\' in table \'flow_MeasuringPointsData\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TamasCreateTimestampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TamasRecipeTransId {
                get {
                    try {
                        return ((string)(this[this.tableflow_MeasuringPointsData.TamasRecipeTransIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TamasRecipeTransId\' in table \'flow_MeasuringPointsData\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.TamasRecipeTransIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long EpksSequenceNumber {
                get {
                    try {
                        return ((long)(this[this.tableflow_MeasuringPointsData.EpksSequenceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EpksSequenceNumber\' in table \'flow_MeasuringPointsData\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.EpksSequenceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long MartaRowNum {
                get {
                    try {
                        return ((long)(this[this.tableflow_MeasuringPointsData.MartaRowNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MartaRowNum\' in table \'flow_MeasuringPointsData\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.MartaRowNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AlcoholContent {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.AlcoholContentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlcoholContent\' in table \'flow_MeasuringPointsData\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.AlcoholContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AlcoholContentReverse {
                get {
                    try {
                        return ((decimal)(this[this.tableflow_MeasuringPointsData.AlcoholContentReverseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AlcoholContentReverse\' in table \'flow_MeasuringPointsData\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.AlcoholContentReverseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BatchId {
                get {
                    try {
                        return ((long)(this[this.tableflow_MeasuringPointsData.BatchIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchId\' in table \'flow_MeasuringPointsData\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableflow_MeasuringPointsData.BatchIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExciseStoreIdNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.ExciseStoreIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExciseStoreIdNull() {
                this[this.tableflow_MeasuringPointsData.ExciseStoreIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseProductNumberNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.BaseProductNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseProductNumberNull() {
                this[this.tableflow_MeasuringPointsData.BaseProductNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseProductTypeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.BaseProductTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseProductTypeNull() {
                this[this.tableflow_MeasuringPointsData.BaseProductTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBaseProductNameNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.BaseProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBaseProductNameNull() {
                this[this.tableflow_MeasuringPointsData.BaseProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProductNumberNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.ProductNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProductNumberNull() {
                this[this.tableflow_MeasuringPointsData.ProductNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProductTypeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.ProductTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProductTypeNull() {
                this[this.tableflow_MeasuringPointsData.ProductTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProductNameNull() {
                this[this.tableflow_MeasuringPointsData.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFlowDirectionNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.FlowDirectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFlowDirectionNull() {
                this[this.tableflow_MeasuringPointsData.FlowDirectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEngineeringUnitMassNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.EngineeringUnitMassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEngineeringUnitMassNull() {
                this[this.tableflow_MeasuringPointsData.EngineeringUnitMassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEngineeringUnitVolumeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.EngineeringUnitVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEngineeringUnitVolumeNull() {
                this[this.tableflow_MeasuringPointsData.EngineeringUnitVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEngineeringUnitDensityNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.EngineeringUnitDensityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEngineeringUnitDensityNull() {
                this[this.tableflow_MeasuringPointsData.EngineeringUnitDensityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEngineeringUnitTemperatureNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.EngineeringUnitTemperatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEngineeringUnitTemperatureNull() {
                this[this.tableflow_MeasuringPointsData.EngineeringUnitTemperatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFactorMassNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.FactorMassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFactorMassNull() {
                this[this.tableflow_MeasuringPointsData.FactorMassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFactorVolumeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.FactorVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFactorVolumeNull() {
                this[this.tableflow_MeasuringPointsData.FactorVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFactorDensityNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.FactorDensityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFactorDensityNull() {
                this[this.tableflow_MeasuringPointsData.FactorDensityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFactorTemperatureNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.FactorTemperatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFactorTemperatureNull() {
                this[this.tableflow_MeasuringPointsData.FactorTemperatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerBeginGrossObservableVolumeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerBeginGrossObservableVolumeNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerEndGrossObservableVolumeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerEndGrossObservableVolumeNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerBeginGrossStandardVolumeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerBeginGrossStandardVolumeNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerEndGrossStandardVolumeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerEndGrossStandardVolumeNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerBeginMassNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerBeginMassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerBeginMassNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerBeginMassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerEndMassNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerEndMassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerEndMassNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerEndMassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerBeginGrossObservableCommonVolumeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableCommonVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerBeginGrossObservableCommonVolumeNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableCommonVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerEndGrossObservableCommonVolumeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableCommonVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerEndGrossObservableCommonVolumeNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableCommonVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerBeginGrossStandardCommonVolumeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardCommonVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerBeginGrossStandardCommonVolumeNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardCommonVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerEndGrossStandardCommonVolumeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardCommonVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerEndGrossStandardCommonVolumeNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardCommonVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerBeginCommonMassNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerBeginCommonMassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerBeginCommonMassNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerBeginCommonMassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerEndCommonMassNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerEndCommonMassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerEndCommonMassNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerEndCommonMassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrossObservableVolumeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.GrossObservableVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrossObservableVolumeNull() {
                this[this.tableflow_MeasuringPointsData.GrossObservableVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrossStandardVolumeNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.GrossStandardVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrossStandardVolumeNull() {
                this[this.tableflow_MeasuringPointsData.GrossStandardVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMassNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.MassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMassNull() {
                this[this.tableflow_MeasuringPointsData.MassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAverageObservableDensityNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.AverageObservableDensityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAverageObservableDensityNull() {
                this[this.tableflow_MeasuringPointsData.AverageObservableDensityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAverageReferenceDensityNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.AverageReferenceDensityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAverageReferenceDensityNull() {
                this[this.tableflow_MeasuringPointsData.AverageReferenceDensityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAverageTemperatureNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.AverageTemperatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAverageTemperatureNull() {
                this[this.tableflow_MeasuringPointsData.AverageTemperatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerBeginGrossObservableVolumeReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableVolumeReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerBeginGrossObservableVolumeReverseNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableVolumeReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerEndGrossObservableVolumeReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableVolumeReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerEndGrossObservableVolumeReverseNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableVolumeReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerBeginGrossStandardVolumeReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardVolumeReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerBeginGrossStandardVolumeReverseNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardVolumeReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerEndGrossStandardVolumeReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardVolumeReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerEndGrossStandardVolumeReverseNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardVolumeReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerBeginMassReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerBeginMassReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerBeginMassReverseNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerBeginMassReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerEndMassReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerEndMassReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerEndMassReverseNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerEndMassReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerBeginGrossObservableCommonVolumeReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableCommonVolumeReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerBeginGrossObservableCommonVolumeReverseNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossObservableCommonVolumeReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerEndGrossObservableCommonVolumeReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableCommonVolumeReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerEndGrossObservableCommonVolumeReverseNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerEndGrossObservableCommonVolumeReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerBeginGrossStandardCommonVolumeReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardCommonVolumeReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerBeginGrossStandardCommonVolumeReverseNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerBeginGrossStandardCommonVolumeReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerEndGrossStandardCommonVolumeReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardCommonVolumeReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerEndGrossStandardCommonVolumeReverseNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerEndGrossStandardCommonVolumeReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerBeginCommonMassReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerBeginCommonMassReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerBeginCommonMassReverseNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerBeginCommonMassReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalizerEndCommonMassReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TotalizerEndCommonMassReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalizerEndCommonMassReverseNull() {
                this[this.tableflow_MeasuringPointsData.TotalizerEndCommonMassReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrossObservableVolumeReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.GrossObservableVolumeReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrossObservableVolumeReverseNull() {
                this[this.tableflow_MeasuringPointsData.GrossObservableVolumeReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrossStandardVolumeReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.GrossStandardVolumeReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrossStandardVolumeReverseNull() {
                this[this.tableflow_MeasuringPointsData.GrossStandardVolumeReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMassReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.MassReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMassReverseNull() {
                this[this.tableflow_MeasuringPointsData.MassReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAverageObservableDensityReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.AverageObservableDensityReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAverageObservableDensityReverseNull() {
                this[this.tableflow_MeasuringPointsData.AverageObservableDensityReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAverageReferenceDensityReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.AverageReferenceDensityReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAverageReferenceDensityReverseNull() {
                this[this.tableflow_MeasuringPointsData.AverageReferenceDensityReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAverageTemperatureReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.AverageTemperatureReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAverageTemperatureReverseNull() {
                this[this.tableflow_MeasuringPointsData.AverageTemperatureReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsResultIdNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.ResultIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetResultIdNull() {
                this[this.tableflow_MeasuringPointsData.ResultIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdditiveResultIdNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.AdditiveResultIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdditiveResultIdNull() {
                this[this.tableflow_MeasuringPointsData.AdditiveResultIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTamasCreateTimestampNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TamasCreateTimestampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTamasCreateTimestampNull() {
                this[this.tableflow_MeasuringPointsData.TamasCreateTimestampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTamasRecipeTransIdNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.TamasRecipeTransIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTamasRecipeTransIdNull() {
                this[this.tableflow_MeasuringPointsData.TamasRecipeTransIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEpksSequenceNumberNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.EpksSequenceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEpksSequenceNumberNull() {
                this[this.tableflow_MeasuringPointsData.EpksSequenceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMartaRowNumNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.MartaRowNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMartaRowNumNull() {
                this[this.tableflow_MeasuringPointsData.MartaRowNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlcoholContentNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.AlcoholContentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlcoholContentNull() {
                this[this.tableflow_MeasuringPointsData.AlcoholContentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlcoholContentReverseNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.AlcoholContentReverseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlcoholContentReverseNull() {
                this[this.tableflow_MeasuringPointsData.AlcoholContentReverseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBatchIdNull() {
                return this.IsNull(this.tableflow_MeasuringPointsData.BatchIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBatchIdNull() {
                this[this.tableflow_MeasuringPointsData.BatchIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class flow_MeasuringPointsDataRowChangeEvent : global::System.EventArgs {
            
            private flow_MeasuringPointsDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public flow_MeasuringPointsDataRowChangeEvent(flow_MeasuringPointsDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public flow_MeasuringPointsDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace CollectingProductionDataSystem.ConsoleClient.AsoDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class flow_MeasuringPointsDataTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public flow_MeasuringPointsDataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "flow_MeasuringPointsData";
            tableMapping.ColumnMappings.Add("SequenceNumber", "SequenceNumber");
            tableMapping.ColumnMappings.Add("ExciseStoreId", "ExciseStoreId");
            tableMapping.ColumnMappings.Add("ZoneId", "ZoneId");
            tableMapping.ColumnMappings.Add("MeasuringPointId", "MeasuringPointId");
            tableMapping.ColumnMappings.Add("TransactionNumber", "TransactionNumber");
            tableMapping.ColumnMappings.Add("RowId", "RowId");
            tableMapping.ColumnMappings.Add("BaseProductNumber", "BaseProductNumber");
            tableMapping.ColumnMappings.Add("BaseProductType", "BaseProductType");
            tableMapping.ColumnMappings.Add("BaseProductName", "BaseProductName");
            tableMapping.ColumnMappings.Add("ProductNumber", "ProductNumber");
            tableMapping.ColumnMappings.Add("ProductType", "ProductType");
            tableMapping.ColumnMappings.Add("ProductName", "ProductName");
            tableMapping.ColumnMappings.Add("FlowDirection", "FlowDirection");
            tableMapping.ColumnMappings.Add("TransactionBeginTime", "TransactionBeginTime");
            tableMapping.ColumnMappings.Add("TransactionEndTime", "TransactionEndTime");
            tableMapping.ColumnMappings.Add("EngineeringUnitMass", "EngineeringUnitMass");
            tableMapping.ColumnMappings.Add("EngineeringUnitVolume", "EngineeringUnitVolume");
            tableMapping.ColumnMappings.Add("EngineeringUnitDensity", "EngineeringUnitDensity");
            tableMapping.ColumnMappings.Add("EngineeringUnitTemperature", "EngineeringUnitTemperature");
            tableMapping.ColumnMappings.Add("FactorMass", "FactorMass");
            tableMapping.ColumnMappings.Add("FactorVolume", "FactorVolume");
            tableMapping.ColumnMappings.Add("FactorDensity", "FactorDensity");
            tableMapping.ColumnMappings.Add("FactorTemperature", "FactorTemperature");
            tableMapping.ColumnMappings.Add("TotalizerBeginGrossObservableVolume", "TotalizerBeginGrossObservableVolume");
            tableMapping.ColumnMappings.Add("TotalizerEndGrossObservableVolume", "TotalizerEndGrossObservableVolume");
            tableMapping.ColumnMappings.Add("TotalizerBeginGrossStandardVolume", "TotalizerBeginGrossStandardVolume");
            tableMapping.ColumnMappings.Add("TotalizerEndGrossStandardVolume", "TotalizerEndGrossStandardVolume");
            tableMapping.ColumnMappings.Add("TotalizerBeginMass", "TotalizerBeginMass");
            tableMapping.ColumnMappings.Add("TotalizerEndMass", "TotalizerEndMass");
            tableMapping.ColumnMappings.Add("TotalizerBeginGrossObservableCommonVolume", "TotalizerBeginGrossObservableCommonVolume");
            tableMapping.ColumnMappings.Add("TotalizerEndGrossObservableCommonVolume", "TotalizerEndGrossObservableCommonVolume");
            tableMapping.ColumnMappings.Add("TotalizerBeginGrossStandardCommonVolume", "TotalizerBeginGrossStandardCommonVolume");
            tableMapping.ColumnMappings.Add("TotalizerEndGrossStandardCommonVolume", "TotalizerEndGrossStandardCommonVolume");
            tableMapping.ColumnMappings.Add("TotalizerBeginCommonMass", "TotalizerBeginCommonMass");
            tableMapping.ColumnMappings.Add("TotalizerEndCommonMass", "TotalizerEndCommonMass");
            tableMapping.ColumnMappings.Add("GrossObservableVolume", "GrossObservableVolume");
            tableMapping.ColumnMappings.Add("GrossStandardVolume", "GrossStandardVolume");
            tableMapping.ColumnMappings.Add("Mass", "Mass");
            tableMapping.ColumnMappings.Add("AverageObservableDensity", "AverageObservableDensity");
            tableMapping.ColumnMappings.Add("AverageReferenceDensity", "AverageReferenceDensity");
            tableMapping.ColumnMappings.Add("AverageTemperature", "AverageTemperature");
            tableMapping.ColumnMappings.Add("TotalizerBeginGrossObservableVolumeReverse", "TotalizerBeginGrossObservableVolumeReverse");
            tableMapping.ColumnMappings.Add("TotalizerEndGrossObservableVolumeReverse", "TotalizerEndGrossObservableVolumeReverse");
            tableMapping.ColumnMappings.Add("TotalizerBeginGrossStandardVolumeReverse", "TotalizerBeginGrossStandardVolumeReverse");
            tableMapping.ColumnMappings.Add("TotalizerEndGrossStandardVolumeReverse", "TotalizerEndGrossStandardVolumeReverse");
            tableMapping.ColumnMappings.Add("TotalizerBeginMassReverse", "TotalizerBeginMassReverse");
            tableMapping.ColumnMappings.Add("TotalizerEndMassReverse", "TotalizerEndMassReverse");
            tableMapping.ColumnMappings.Add("TotalizerBeginGrossObservableCommonVolumeReverse", "TotalizerBeginGrossObservableCommonVolumeReverse");
            tableMapping.ColumnMappings.Add("TotalizerEndGrossObservableCommonVolumeReverse", "TotalizerEndGrossObservableCommonVolumeReverse");
            tableMapping.ColumnMappings.Add("TotalizerBeginGrossStandardCommonVolumeReverse", "TotalizerBeginGrossStandardCommonVolumeReverse");
            tableMapping.ColumnMappings.Add("TotalizerEndGrossStandardCommonVolumeReverse", "TotalizerEndGrossStandardCommonVolumeReverse");
            tableMapping.ColumnMappings.Add("TotalizerBeginCommonMassReverse", "TotalizerBeginCommonMassReverse");
            tableMapping.ColumnMappings.Add("TotalizerEndCommonMassReverse", "TotalizerEndCommonMassReverse");
            tableMapping.ColumnMappings.Add("GrossObservableVolumeReverse", "GrossObservableVolumeReverse");
            tableMapping.ColumnMappings.Add("GrossStandardVolumeReverse", "GrossStandardVolumeReverse");
            tableMapping.ColumnMappings.Add("MassReverse", "MassReverse");
            tableMapping.ColumnMappings.Add("AverageObservableDensityReverse", "AverageObservableDensityReverse");
            tableMapping.ColumnMappings.Add("AverageReferenceDensityReverse", "AverageReferenceDensityReverse");
            tableMapping.ColumnMappings.Add("AverageTemperatureReverse", "AverageTemperatureReverse");
            tableMapping.ColumnMappings.Add("InsertTimestamp", "InsertTimestamp");
            tableMapping.ColumnMappings.Add("ResultId", "ResultId");
            tableMapping.ColumnMappings.Add("AdditiveResultId", "AdditiveResultId");
            tableMapping.ColumnMappings.Add("TamasCreateTimestamp", "TamasCreateTimestamp");
            tableMapping.ColumnMappings.Add("TamasRecipeTransId", "TamasRecipeTransId");
            tableMapping.ColumnMappings.Add("EpksSequenceNumber", "EpksSequenceNumber");
            tableMapping.ColumnMappings.Add("MartaRowNum", "MartaRowNum");
            tableMapping.ColumnMappings.Add("AlcoholContent", "AlcoholContent");
            tableMapping.ColumnMappings.Add("AlcoholContentReverse", "AlcoholContentReverse");
            tableMapping.ColumnMappings.Add("BatchId", "BatchId");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::CollectingProductionDataSystem.ConsoleClient.Properties.Settings.Default.AutomatedReportingSystemConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        SequenceNumber, ExciseStoreId, ZoneId, MeasuringPointId, Transactio" +
                "nNumber, RowId, BaseProductNumber, BaseProductType, BaseProductName, \r\n         " +
                "                ProductNumber, ProductType, ProductName, FlowDirection, Transact" +
                "ionBeginTime, TransactionEndTime, EngineeringUnitMass, EngineeringUnitVolume, \r\n" +
                "                         EngineeringUnitDensity, EngineeringUnitTemperature, Fac" +
                "torMass, FactorVolume, FactorDensity, FactorTemperature, TotalizerBeginGrossObse" +
                "rvableVolume, \r\n                         TotalizerEndGrossObservableVolume, Tota" +
                "lizerBeginGrossStandardVolume, TotalizerEndGrossStandardVolume, TotalizerBeginMa" +
                "ss, TotalizerEndMass, \r\n                         TotalizerBeginGrossObservableCo" +
                "mmonVolume, TotalizerEndGrossObservableCommonVolume, TotalizerBeginGrossStandard" +
                "CommonVolume, \r\n                         TotalizerEndGrossStandardCommonVolume, " +
                "TotalizerBeginCommonMass, TotalizerEndCommonMass, GrossObservableVolume, GrossSt" +
                "andardVolume, Mass, \r\n                         AverageObservableDensity, Average" +
                "ReferenceDensity, AverageTemperature, TotalizerBeginGrossObservableVolumeReverse" +
                ", \r\n                         TotalizerEndGrossObservableVolumeReverse, Totalizer" +
                "BeginGrossStandardVolumeReverse, TotalizerEndGrossStandardVolumeReverse, \r\n     " +
                "                    TotalizerBeginMassReverse, TotalizerEndMassReverse, Totalize" +
                "rBeginGrossObservableCommonVolumeReverse, \r\n                         TotalizerEn" +
                "dGrossObservableCommonVolumeReverse, TotalizerBeginGrossStandardCommonVolumeReve" +
                "rse, TotalizerEndGrossStandardCommonVolumeReverse, \r\n                         To" +
                "talizerBeginCommonMassReverse, TotalizerEndCommonMassReverse, GrossObservableVol" +
                "umeReverse, GrossStandardVolumeReverse, MassReverse, \r\n                         " +
                "AverageObservableDensityReverse, AverageReferenceDensityReverse, AverageTemperat" +
                "ureReverse, InsertTimestamp, ResultId, AdditiveResultId, \r\n                     " +
                "    TamasCreateTimestamp, TamasRecipeTransId, EpksSequenceNumber, MartaRowNum, A" +
                "lcoholContent, AlcoholContentReverse, BatchId\r\nFROM            flow_MeasuringPoi" +
                "ntsData\r\nWHERE        (InsertTimestamp > @MaxInsertTimestamp) AND (RowId = - 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxInsertTimestamp", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "InsertTimestamp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(AsoDataSet.flow_MeasuringPointsDataDataTable dataTable, System.DateTime MaxInsertTimestamp) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(MaxInsertTimestamp));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual AsoDataSet.flow_MeasuringPointsDataDataTable GetData(System.DateTime MaxInsertTimestamp) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(MaxInsertTimestamp));
            AsoDataSet.flow_MeasuringPointsDataDataTable dataTable = new AsoDataSet.flow_MeasuringPointsDataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(AsoDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(AsoDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(AsoDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(AsoDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591