@using Resources = App_GlobalResources.Resources;
@using CollectingProductionDataSystem.Web.Infrastructure.Helpers;

<div class="form-group">
    <label for="factories">@Resources.Layout.Factory</label>
    @(Html.Kendo().DropDownList()
        .Name("factories")
        .OptionLabel(Resources.Layout.ChooseFactory)
        .HtmlAttributes(new { style = "width:95%" })
        .DataTextField("Name")
        .DataValueField("Id")
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetFactories", "Ajax", new { area = "" });
            });
        })
    )
</div>
<div class="form-group">
    <label for="processunits">@Resources.Layout.ProcessUnit</label>
    @(Html.Kendo().DropDownList()
        .Name("processunits")
        .OptionLabel(Resources.Layout.ChooseProcessUnit)
        .HtmlAttributes(new { style = "width:95%" })
        .DataTextField("Name")
        .DataValueField("Id")
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetProcessUnits", "Ajax", new { area = "" }).Data("sendFactory");
            })
            .ServerFiltering(true);
        })
        .Enable(false)
        .AutoBind(false)
        .CascadeFrom("factories")
    )

</div>
<div class="form-group">
    <label for="date">@Resources.Layout.Date</label>
    @Html.Kendo().DatePicker().Name("date").Culture("bg-BG").HtmlAttributes(new { style = "width:95%" })
</div>
<hr />
<div class="form-group">
    <button id="apply" type="button" class="btn btn-primary" style="width:95%">@Resources.Layout.Apply</button>
</div>
<hr />
<div class="form-group">
    <button id="confirm" type="button" class="btn btn-danger" style="width:95%">@Resources.Layout.Confirm</button>
</div>

@using (Html.BeginScripts()) { 
    <script>
        function sendFactory() {
            return {
                factoryId: $("#factories").val()
            };
        }
    </script>
}