@using System.Web.Optimization;
@using CollectingProductionDataSystem.Constants;
@using CollectingProductionDataSystem.Web.Areas.MonthlyDataReporting.Models;
@using CollectingProductionDataSystem.Web.Infrastructure.Helpers;
@using Resources = App_GlobalResources.Resources;
@model MonthlyReportParametersViewModel
@{
    Layout = "~/Views/Shared/_KendoLayoutWithSideBar.cshtml";
}
<div class="row">
    <div class="col-md-10">
        <h2>@Resources.Layout.UnitMonthlyPWData</h2>
    </div>
    <div class="col-md-2">
        <button id="excel-export" class="k-button k-button-icontext k-grid-excel pull-right head-button"><span class="k-icon k-i-excel"></span>Експорт в Excel</button>
    </div>
</div>
@Html.Hidden("monthlyReportTypeId", CommonConstants.PotableWater)
@Html.ValidationSummary()
@Html.AntiForgeryToken()
@(Html.Kendo()
    .Grid<MonthlyReportTableViewModel>()
    .Name("monthly-pw-units")
    .AutoBind(false)
    .Columns(
        columns =>
        {
            columns.Bound(c => c.UnitMonthlyConfig.Code)
                .ClientTemplate(
                    Ajax.AuthorizedAjaxActionLinkOrText("#=data.UnitMonthlyConfig.Code#", "Index", "History",
                        new AjaxOptions() { HttpMethod = "Get", OnSuccess = "showRecordHistoriModal" },
                        new { area = "RecordsHistory", id = "#=data.id#", entityName = "UnitMonthlyData" },
                        new { data_ajax_mode = "replace", data_ajax_update = @"\#modal-dialog-body" })
                        .ToHtmlString())
                .Width(75);

            columns.Bound(c => c.UnitMonthlyConfig.ProcessUnit.Factory.FactorySortableName).Hidden(true).ClientGroupHeaderTemplate("Производство #=value.substr(3,value.length-3)#").Width(10);
            columns.Bound(c => c.UnitMonthlyConfig.ProductType.SortableName).Hidden(true).ClientGroupHeaderTemplate("#=value.substr(3,value.length-3)#");
            columns.Bound(c => c.UnitMonthlyConfig.ProcessUnit.ShortName).Width(80).Title(@Resources.Layout.ProcessUnit);
            columns.Bound(c => c.UnitMonthlyConfig.Name).Width(250);
            columns.Bound(c => c.UnitMonthlyConfig.MeasureUnit.Code).Width(100);
            columns.Bound(c => c.Value).ClientTemplate("<div style='text-align:right;'>#=data.Value==null?'':kendo.toString(data.Value, '\\#\\#.\\#\\#\\#\\#\\#')#</div>").Width(100).Title(Resources.Layout.OperatinalData);
            columns.Bound(c => c.UnitManualMonthlyData.Value)
                .ClientTemplate(string.Format("{0}{2}{1}", "<div style='text-align:right;'>", "</div>",
                    Ajax.AuthorizedAjaxActionLinkOrText("#=kendo.toString(data.UnitManualMonthlyData.Value,'\\#\\#.\\#\\#\\#\\#\\#')#", "Index", "History",
                        new AjaxOptions() { HttpMethod = "Get", OnSuccess = "showRecordHistoriModal" },
                        new { area = "RecordsHistory", id = "#=data.id#", entityName = "UnitManualMonthlyData" },
                        new { data_ajax_mode = "replace", data_ajax_update = @"\#modal-dialog-body" })
                    .ToHtmlString()))
                .Width(100).Title(Resources.Layout.ReportedData);
            columns.Bound(c => c.RelativeDifference).Width(100).ClientTemplate("<div style='text-align:right;'>#=data.RelativeDifference==null?'':kendo.toString(data.RelativeDifference, '\\#\\#.\\#\\#\\#\\#\\#')#%</div>").Visible(false);
            columns.Bound(c => c.IsEditable).Visible(false);
            columns.Command(c => c.Edit()).Width(170);
        })
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(false)
            .Numeric(false)
            .PreviousNext(false)
        )
                .Editable(editable => editable.Mode(GridEditMode.InLine))
        .Sortable()
            .Excel(excel => excel
            .FileName(@Resources.Layout.UnitMonthlyPWData + "_" + DateTime.Now + ".xlsx")
            .Filterable(true)
            .ProxyURL(Url.Action("Excel_Export_Save", "Ajax", new { area = "" }))
            .AllPages(true))
                .Events(ev =>
                {
                    ev.DataBound("unitGridsData.DataBound");
                })
            .Scrollable(scr => scr.Height(640))
            .Filterable()
            .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(int.MaxValue)
            .ServerOperation(true)
            .Group(group =>
            {
                group.Add(c => c.UnitMonthlyConfig.ProductType.SortableName);
                group.Add(c => c.UnitMonthlyConfig.ProcessUnit.Factory.FactorySortableName);
            })

            .Read(read => read.Action("ReadMonthlyPotableWaterData", "MonthlyPotableWater", new { area = "MonthlyDataReporting" }).Data("unitGridsData.SendDate").Type(HttpVerbs.Post))
            .Update(update => update.Action("Edit", "MonthlyPotableWater", new { area = "MonthlyDataReporting" }).Data("sendAntiForgery"))
            .Model(model =>
            {
                model.Id(p => p.Id);
                model.Field(p => p.UnitMonthlyConfig.Code).Editable(false);
                model.Field(p => p.UnitMonthlyConfig.ProcessUnit.Factory.FactorySortableName).Editable(false);
                model.Field(p => p.UnitMonthlyConfig.ProductType.Name).Editable(false);
                model.Field(p => p.UnitMonthlyConfig.ProcessUnit.SortableName).Editable(false);
                model.Field(p => p.UnitMonthlyConfig.Name).Editable(false);
                model.Field(p => p.UnitMonthlyConfig.MeasureUnit.Code).Editable(false);
                model.Field(p => p.Value).Editable(false);
                model.Field(p => p.UnitManualMonthlyData.Value).Editable(true).DefaultValue(0);
            })
            .Events(events =>
            {
                events.Error("kendoAdditional.ErrorHandler");
                events.RequestEnd("unitGridsData.DataSave");
            })
        )
)
@* //Error window for kendo grid error event handler *@
<div id="err-window" style="display:none">@Html.Partial("_KendoGridErrorWindow")</div>
@* //Error window for kendo grid error event handler *@
<div id="success-window" style="display:none">@Html.Partial("_SuccessWindow")</div>
@section scripts{
    @Scripts.Render("~/bundles/custom/kendoadditional")
    @Scripts.Render("~/bundles/custom/unitGrids")
    @Scripts.Render("~/Scripts/custom/renderDailyGraphic.min.js")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
}
@section sidebar{
    @Html.Partial("_MonthSelectorEditAndReportSideBar")
}