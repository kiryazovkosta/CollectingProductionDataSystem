@using CollectingProductionDataSystem.Web.Areas.ManagementDashBoard.Models;
@using Resources = App_GlobalResources.Resources
@model DashBoardViewModel
@Html.AntiForgeryToken()
<div class="container-fluid controlls-wraper">
    <div class="panel panel-default">
        <div class="panel-heading">
            Параметри на графиките
            <a role="button" id="collapse" data-toggle="collapse" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne" class="pull-right"><span class="glyphicon glyphicon-chevron-up"></span></a>
        </div>
        <div class="panel-body collapse in" id="collapseOne">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="control-label" for="form-group-input1">@Resources.Layout.PeriodBegining</label>
                        @(Html.Kendo().DatePicker()
                        .Name("begin-date")
                        .Value(DateTime.Now.AddDays(-32)).Max(DateTime.Now.AddDays(-1))
                        )
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="control-label" for="form-group-input2">@Resources.Layout.PeriodEnd</label>
                        @(Html.Kendo().DatePicker()
                        .Name("end-date")
                        .Value(DateTime.Now.AddDays(-1)).Max(DateTime.Now.AddDays(-1))
                        )
                    </div>
                </div>
            </div>
            <div class="row chart-tumb-row">
                <hr class="control-delimiter" />
                <a href="#" id="convert" class="btn btn-primary">Приложи</a>
            </div>
        </div>
    </div>
</div>

@(Html.Kendo().TabStrip()
    .Name("charts-holder")
    .Items(items =>
    {
        items.Add().Text(@Resources.Layout.ProcessUnitLoading).Selected(true).Content(Html.AllProcessUnints(Model.ProcessUnitLoadStatistics).ToHtmlString());
        items.Add().Text("Отборни данни за инсталации").Content(Html.AllProcessUnints(Model.ProcessUnitStatistics).ToHtmlString());
    })
    //.Events(ev => ev.Activate("OnActivate"))
)


@* //Error window for kendo grid error event handler *@
<div id="err-window" style="display:none">@Html.Partial("_KendoGridErrorWindow")</div>
@* //Error window for kendo grid error event handler *@
<div id="success-window" style="display:none">@Html.Partial("_SuccessWindow")</div>

@section scripts
{
    @Scripts.Render("~/bundles/custom/kendoadditional")
    <script>

        var Charts = [];
        $(function () {
            $('#collapseOne').on('hidden.bs.collapse', function () {
                var span = $('#collapse span');
                span.removeClass();
                span.addClass("glyphicon glyphicon-chevron-down")
            });

            $('#collapseOne').on('shown.bs.collapse', function () {
                var span = $('#collapse span');
                span.removeClass();
                span.addClass("glyphicon glyphicon-chevron-up");
            })

            $("#convert").click(
                function () {
                    $.ajax({
                        url: "/ManagementDashBoard/Dashboard/CheckDates",
                        type: 'POST',
                        data: {
                            beginDate: GetDate("#begin-date"),
                            endDate: GetDate("#end-date"),
                            "__RequestVerificationToken": $('input[name=__RequestVerificationToken]').val()
                        }
                    }).done(function () {
                        var tab = $("#charts-holder").data("kendoTabStrip").select();
                        var id = parseInt(tab.attr("aria-controls").replace(/^\D+/g, ''));
                        populateTab(id);
                    })
                        .fail(function (data) {
                            errHandler(data);
                        });
                });
        });

        function OnActivate(ev) {
            var id = parseInt($(ev.item).attr("aria-controls").replace(/^\D+/g, ''));
            populateTab(id);
        }

        function populateTab(id)
        {
            if (id == 1) {
 
                    var processUnits = $("[role=pu-load-chart-holder]");
                    processUnits.each(function (index, holder) {
                        var id = $(holder).attr("id").replace("pul-", "");
                        GetHolderValue(id, holder, "/ManagementDashBoard/Dashboard/DailyLoadChart");
                    });
                
            }

            if (id == 2) {
                var processUnits = $("[role=pu-chart-holder]");
                processUnits.each(function (index, holder) {
                    var id = $(holder).attr("id").replace("pu-", "");
                    GetHolderValue(id, holder, "/ManagementDashBoard/Dashboard/DailyMaterialChart");
                });
            }
        }

        function GetHolderValue(id, holder, url) {
            $.ajax({
                url: url,
                data: {
                    processUnitId: id,
                    beginDate: GetDate("#begin-date"),
                    endDate: GetDate("#end-date"),
                    height: 200,
                    shortTitle: true
                },
                success: function (data) {
                    $(holder).html(data);
                }
            });
        }


        function GetTabValue(id) {
            $.ajax({
                url: "/ManagementDashBoard/Dashboard/DailyMaterialChart?processUnitId=" + id + "&date=2016-03-31+00%3A00%3A00Z",
                success: function (data) {
                    $("#value" + (id)).html(data);
                }
            });
        }

        function GetDate(selector) {
            var datePicker = $(selector).data('kendoDatePicker');
            if (datePicker !== undefined) {
                var date = datePicker.value();
            } else {
                return;
            }

            return date.toISOString(kendo.culture().name);
        }


        function errHandler (data) {
            var errorMessage = "";
            var response = JSON.parse(data.responseText).data;
            $.each(response.errors, function (key, value) {
                errorMessage += this + "\n";
            });
            $('pre#err-message').text(errorMessage);
            $('div#err-window').data("kendoWindow").open();
        }
    </script>
}
