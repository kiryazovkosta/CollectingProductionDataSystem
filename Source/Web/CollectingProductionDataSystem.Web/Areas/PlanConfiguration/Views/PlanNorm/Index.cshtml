@using CollectingProductionDataSystem.Web.Areas.PlanConfiguration.Models;
@using Resources = App_GlobalResources.Resources;
<div class="row">
    <div class="col-md-12">
        <h2>@Resources.Layout.PlanNorm</h2>
    </div>
</div>
@Html.AntiForgeryToken()
@(Html.Kendo()
      .Grid<PlanNormViewModel>()
      .Name("plan-grid")
      .AutoBind(false)
      .Columns(columns =>
      {
          columns.Bound(c => c.ProductionPlanConfig.ProcessUnit.Factory.FactorySortableName).Hidden(true).ClientGroupHeaderTemplate("Производство #=value.substr(3,value.length-3)#").Width(10);
          columns.Bound(c => c.ProductionPlanConfig.ProcessUnit.SortableName).Hidden(true).ClientGroupHeaderTemplate("Инсталация #=value.substr(3,value.length-3)#").Width(10);
          columns.Bound(c => c.Month).Format("{0:MMMM yyyy}").Width(100);
          columns.Bound(c => c.ProductionPlanConfig.Code).Width(100);
          columns.Bound(c => c.ProductionPlanConfig.Name);
          //columns.ForeignKey(c => c.ProductionPlanConfigId, (System.Collections.IEnumerable)ViewData["planConfigs"], "Id", "DisplayName");
          columns.Bound(c => c.Value)
          .ClientTemplate(Ajax.AuthorizedAjaxActionLinkOrText("#=data.Value#", "Index", "History",
          new AjaxOptions() { HttpMethod = "Get", OnSuccess = "showRecordHistoriModal" },
          new { area = "RecordsHistory", id = "#=data.id#", entityName = "PlanNorm" },
          new { data_ajax_mode = "replace", data_ajax_update = @"\#modal-dialog-body" })
          .ToHtmlString()).Width(160);
          columns.Command(command => { command.Edit(); }).Width(180);
      })
      .ToolBar(toolbar =>
                {
                    toolbar.Excel();
                })
      .Excel(excel => excel
                .AllPages(true)
            )
      .Editable(editable => editable.Mode(GridEditMode.InLine))
      .Pageable(pageable => pageable
                    .Refresh(true)
                    .PageSizes(false)
                    .Numeric(false)
                    .PreviousNext(false)
                )
      .Sortable(sortable =>
      {
          sortable.SortMode(GridSortMode.SingleColumn);
      })
      .Filterable()
      .Scrollable(scrol => scrol.Height(620))
      .Scrollable()
      .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(int.MaxValue)
            .Group(group =>
                {
                    group.Add(c => c.ProductionPlanConfig.ProcessUnit.Factory.FactorySortableName);
                    group.Add(c => c.ProductionPlanConfig.ProcessUnit.SortableName);
                })
                .Sort(sort=>sort.Add(c=>c.ProductionPlanConfig.Position))
            .Model(model =>
            {
                model.Id(p => p.Id);
                model.Field(p => p.Month).Editable(false);
                model.Field(p => p.ProductionPlanConfig.ProcessUnit.Factory.FactorySortableName).Editable(false);
                model.Field(p => p.ProductionPlanConfig.ProcessUnit.SortableName).Editable(false);
                
            })
            .Read(read => read.Action("Read", "PlanNorm", new { area = "PlanConfiguration" }).Data("unitGridsData.SendDate"))
                .Update(update => update.Action("Update", "PlanNorm", new { area = "PlanConfiguration" }).Data("sendAntiForgery"))
            .Events(events =>
            {
                events.Error("kendoAdditional.ErrorHandler");
                events.RequestEnd("kendoAdditional.AfterterNomGridValidation");
            })
            )
        .Events(ev => ev.DataBound("kendoAdditional.DeletableDataBound"))
)
@* //Error window for kendo grid error event handler *@
<div id="err-window" style="display:none">@Html.Partial("_KendoGridErrorWindow")</div>
@* //Error window for kendo grid error event handler *@
<div id="success-window" style="display:none">@Html.Partial("_SuccessWindow")</div>

@section scripts{
    @Scripts.Render("~/bundles/custom/kendoadditional")
    @Scripts.Render("~/bundles/custom/unitGrids")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
}




@section sidebar{
    @Html.Partial("_MonthSelectorAproveableSideBar")
}





