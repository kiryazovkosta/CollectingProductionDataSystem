﻿﻿@(Html.Kendo().Grid<CollectingProductionDataSystem.Web.Areas.NomManagement.Models.ViewModels.ProcessUnitViewModel>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.ShortName)
               .ClientTemplate(Ajax.AuthorizedAjaxActionLinkOrText("#=data.ShortName#", "Index", "History",
                                                new AjaxOptions() { HttpMethod = "Get", OnSuccess = "showRecordHistoriModal" },
                                                new { area = "RecordsHistory", id = "#=data.id#", entityName = "ProcessUnit" },
                                                new { data_ajax_mode = "replace", data_ajax_update = @"\#modal-dialog-body" })
                                                .ToHtmlString());
          columns.Bound(c => c.FullName);
          columns.ForeignKey(c => c.FactoryId, (System.Collections.IEnumerable)ViewData["factories"], "Id", "FullName").EditorTemplateName("FactoryViewModel");
          columns.Bound(c => c.Position);
          columns.Bound(c => c.HasDailyStatistics).ClientTemplate("<img src='../Content/Images/#=data.HasDailyStatistics ? 'ok.png': 'error.png'#' alt='#=data.HasDailyStatistics#' height='20px' width='20px'/>");
          columns.Bound(c => c.HasLoadStatistics).ClientTemplate("<img src='../Content/Images/#=data.HasLoadStatistics ? 'ok.png': 'error.png'#' alt='#=data.HasLoadStatistics#' height='20px' width='20px'/>");
          columns.Bound(c => c.HasApprovedStatistics).ClientTemplate("<img src='../Content/Images/#=data.HasApprovedStatistics ? 'ok.png': 'error.png'#' alt='#=data.HasApprovedStatistics#' height='20px' width='20px'/>");
          columns.Bound(c => c.ActiveFrom).Format("MMMM yyyy").ClientTemplate("#= data.ActiveFrom ? kendo.toString(kendo.parseDate(data.ActiveFrom), 'MMMM yyyy') : '' #").EditorTemplateName("DateMonthActiveFromInputModel");
          columns.Bound(c => c.ActiveTo).Format("MMMM yyyy").ClientTemplate("#= data.ActiveTo ? kendo.toString(kendo.parseDate(data.ActiveTo), 'MMMM yyyy') : '' #").EditorTemplateName("DateTimeActiveToInputModel");
          columns.Command(command => { command.Edit(); command.Destroy(); }).Width(230);
      })
      .ToolBar(toolbar =>
      {
          toolbar.Create();
          toolbar.Excel();
      })
          .Excel(x => x.AllPages(true))
        .Editable(editable => editable.Mode(GridEditMode.InLine))
          .Pageable(pageable => pageable
              .Refresh(true)
              .PageSizes(new[] { 20, 50, 100 })
              .ButtonCount(5)
          )
          .Sortable(sortable =>
          {
              sortable.SortMode(GridSortMode.SingleColumn);
          })
          .Filterable()
          .Scrollable(scrol => scrol.Height(620))
              .Excel(x => x.AllPages(true))
      .Scrollable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .PageSize(20)
          .Model(model => model.Id(p => p.Id))
          .Read(read => read.Action("Read", "ProcessUnit", new { area = "NomManagement" }).Data("sendAntiForgery"))
          .Create(create => create.Action("Create", "ProcessUnit", new { area = "NomManagement" }).Data("sendAntiForgery"))
          .Update(update => update.Action("Update", "ProcessUnit", new { area = "NomManagement" }).Data("sendAntiForgery"))
          .Destroy(destroy => destroy.Action("Destroy", "ProcessUnit", new { area = "NomManagement" }).Data("sendAntiForgery"))
          .Events(events =>
          {
              events.Error("kendoAdditional.ErrorHandler");
          })
          )
              .Events(ev => ev.DataBound("kendoAdditional.DeletableDataBound"))
)


