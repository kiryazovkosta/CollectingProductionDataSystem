@using CollectingProductionDataSystem.Models.Productions;
@{
    Layout = "~/Views/Shared/_KendoLayout.cshtml";
}

@(Html.Kendo()
      .Grid<UnitConfig>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Code);
          columns.Bound(c => c.Position);
          columns.Bound(c => c.Name);
          columns.Bound(c => c.IsMaterial);
          columns.Bound(c => c.IsEnergy);
          columns.Bound(c => c.IsInspectionPoint);
          columns.Bound(c => c.CollectingDataMechanism);
          columns.Bound(c => c.AggregateGroup);
          columns.Bound(c => c.AggregateParameter);
          columns.Bound(c => c.IsCalculated);
          columns.Bound(c => c.PreviousShiftTag);
          columns.Bound(c => c.CurrentInspectionDataTag);
          columns.Bound(c => c.Notes);
          columns.Bound(c => c.MaximumCost);
          columns.Bound(c => c.EstimatedDensity);
          columns.Bound(c => c.EstimatedPressure);
          columns.Bound(c => c.EstimatedTemperature);
          columns.Bound(c => c.EstimatedCompressibilityFactor);
          columns.Bound(c => c.MaterialTypeId);
          columns.Bound(c => c.ProcessUnitId);
          columns.Bound(c => c.ProductId);
          columns.Bound(c => c.ProductTypeId);
          columns.Bound(c => c.MeasureUnitId);
          columns.Bound(c => c.DirectionId);
          columns.Bound(c => c.CreatedOn).Hidden().Format("{0:dd.MM.yyyy HH:mm}");
          columns.Bound(c => c.CreatedFrom).Hidden();
          columns.Command(command => { command.Edit(); command.Destroy(); }).Width(180);
      })
      .ToolBar(toolbar =>
        {
            toolbar.Create();
            toolbar.Excel();
        })
              .Editable(editable => editable.Mode(GridEditMode.InLine))
                  .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(new[] { 10, 20, 50, 100 })
            .ButtonCount(5)
        )
              .Sortable(sortable =>
        {
            sortable.SortMode(GridSortMode.SingleColumn);
        })
      .Filterable()
      .Scrollable(scrol => scrol.Height(620))
      .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model => model.Id(p => p.Id))
        .Read(read => read.Action("UnitConfigs_Read", "UnitConfig", new { area = "NomManagement" }))
        .Create(create => create.Action("UnitConfigs_Create", "UnitConfig", new { area = "NomManagement" }))
        .Update(update => update.Action("UnitConfigs_Update", "UnitConfig", new { area = "NomManagement" }))
        .Destroy(destroy => destroy.Action("UnitConfigs_Destroy", "UnitConfig", new { area = "NomManagement" }))
      )
)

@section scripts{
    <script>
        $(function () {
            var culture = $('#culture').val();
            kendo.culture(culture);
        });
    </script>
}








