﻿﻿@(Html.Kendo().Grid<CollectingProductionDataSystem.Web.Areas.NomManagement.Models.ViewModels.MeasureUnitViewModel>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Code)
              .ClientTemplate(Ajax.AuthorizedAjaxActionLinkOrText("#=data.Code#", "Index", "History",
                                                new AjaxOptions() { HttpMethod = "Get", OnSuccess = "showRecordHistoriModal" },
                                                new { area = "RecordsHistory", id = "#=data.id#", entityName = "MeasureUnit" },
                                                new { data_ajax_mode = "replace", data_ajax_update = @"\#record-history-body" })
                                                .ToHtmlString())
              .Width(70);
          columns.Bound(c => c.Name);
          columns.Command(command => { command.Edit(); command.Destroy(); }).Width(230);
      })
      .ToolBar(toolbar =>
      {
          toolbar.Create();
          toolbar.Excel();
      })
      .Editable(editable => editable.Mode(GridEditMode.InLine))
          .Pageable(pageable => pageable
              .Refresh(true)
              .PageSizes(new[] { 20, 50, 100 })
              .ButtonCount(5)
          )
          .Sortable(sortable =>
          {
              sortable.SortMode(GridSortMode.SingleColumn);
          })
          .Filterable()
          .Scrollable(scrol => scrol.Height(620))
      .Scrollable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .PageSize(20)
          .Model(model => model.Id(p => p.Id))
                  .Read(read => read.Action("Read", "MeasureUnit", new { area = "NomManagement" }).Data("sendAntiForgery"))
                  .Create(create => create.Action("Create", "MeasureUnit", new { area = "NomManagement" }).Data("sendAntiForgery"))
                  .Update(update => update.Action("Update", "MeasureUnit", new { area = "NomManagement" }).Data("sendAntiForgery"))
                  .Destroy(destroy => destroy.Action("Destroy", "MeasureUnit", new { area = "NomManagement" }).Data("sendAntiForgery"))
          .Events(events =>
                {
                    events.Error("error_handler");
                })
          )
          .Events(ev => ev.DataBound("deletableDataBound"))
)





