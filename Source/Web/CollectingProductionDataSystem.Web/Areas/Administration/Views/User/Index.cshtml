@using Resources = App_GlobalResources.Resources
@model IEnumerable<CollectingProductionDataSystem.Web.Areas.Administration.ViewModels.EditUserViewModel>

@{
    Layout = "~/Areas/Administration/Views/Shared/_KendoAdminLayout.cshtml";
}

<div class="panel panel-primary">
    <div class="panel-heading">
        @Resources.Layout.UserAccounts
    </div>
    @Html.AntiForgeryToken()
    @(Html.Kendo()
          .Grid(Model)
          .Name("users")
          .Columns(
               columns =>
               {
                   columns.Bound(c => c.UserChangedPassword).Width(40)
                       .ClientTemplate("<img src='#:data.UserChangedPassword? '/Content/Images/PNG/32x32/OKShield.png':'/Content/Images/PNG/32x32/ErrorCircle.png'#' class='grid-icon'/>");
                   columns.Bound(c => c.Id).Width(45);
                   columns.Bound(c => c.UserName);
                   columns.Bound(c => c.Email);
                   columns.Bound(c => c.FullName);
                   columns.Bound(c => c.UserRoles).ClientTemplate("#=customeTemplate(UserRoles)#");
                   columns.Bound(c => c.ProcessUnits).ClientTemplate("#=customeTemplate(ProcessUnits)#");
                   columns.Bound(c => c.Parks).ClientTemplate("#=customeTemplate(Parks)#");
                   columns.Command(c => { c.Edit(); c.Destroy(); }).Width(220);
               })
          .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("EditUserViewModel").Window(window => window.Scrollable(false)))
          .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(new[] { 10, 20, 50, 100 })
                .ButtonCount(5))
          .Sortable()
          .Scrollable(scr => scr.Height(600))
          .Filterable()
          .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(20)
                .ServerOperation(true)
                .Read(read => read.Action("GetAllUsers", "Ajax", new { area = "Administration" }).Data("sendAntiForgery"))
                                .Events(events => events.Error("error_handler").RequestEnd("restyle_grid"))
                        .Model(model =>
                        {
                            model.Id(p => p.Id);
                        })
                        .Update(update => update.Action("Edit", "User", new { area = "Administration" }).Data("sendAntiForgery"))
                        .Destroy(update => update.Action("Delete", "User", new { area = "Administration" }).Data("sendAntiForgery"))
            )
    )
</div>
<div class="well well-sm">
    @Html.ActionLink(Resources.Layout.Create, "Create", null, new { @class = "btn btn-primary" })
</div>

@if (TempData["success"] != null)
{
    <div id="success-message" class="alert alert-success alert-dismissable">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        @TempData["success"]
    </div>
}

    @* //Error window for kendo grid error event handler *@
    <div id="err-window" style="display:none">@Html.Partial("_KendoGridErrorWindow")</div>

    <script type="text/kendo" id="customeTemplate">
        #if(data){#
        #for(var i = 0; i< data.length; i++){#
        #if(data[i].Name != null){#
        &bull;&nbsp;#:data[i].Name#
        <br />
        #}#
        #}#
        #}#
    </script>

    @section scripts{
        @Scripts.Render("~/Scripts/custom/sendAntiForgery.js")
        <script>
            $(document).ready(function () {
                var successMessage = $('#success-message');
                if (successMessage != null) {
                    successMessage.fadeOut(7000);
                }
            });

            function error_handler(e) {
                if (e.errors) {
                    // prevent window from closing
                    var grid = $("#users").data("kendoGrid");
                    grid.one("dataBinding", function (e) {
                        e.preventDefault();
                    });

                    var message = "";
                    $.each(e.errors, function (key, value) {
                        if ('errors' in value) {
                            $.each(value.errors, function () {
                                message += this + "\n";
                            });
                        }
                    });

                    message = $('pre').text(message);
                    message.addClass('validation-summary-errors');
                    var validationSummary = $('#validation-summary');
                    validationSummary.html(message);
                    validationSummary.removeClass();
                    validationSummary.addClass('validation-summary-errors');
                    validationSummary.attr("display", "block");
                }
            }


            var customeTemplate = kendo.template($("#customeTemplate").html(), { useWithBlock: false });
        </script>
    }

    @section styles{
        <style>
            .k-edit-buttons {
                max-width: 650px;
                width: 632px;
            }

            .k-edit-form-container {
                width: 95%;
                margin-left: auto;
                margin-right: auto;
            }

            div.k-window-content {
                width: 685px;
            }
        </style>
    }





