@using System.Web.Optimization;
@using CollectingProductionDataSystem.Web.Areas.ShiftReporting.ViewModels;
@using CollectingProductionDataSystem.Web.Infrastructure.Helpers;
@using Resources = App_GlobalResources.Resources;

@model UnitDataViewModel
@{
    Layout = "~/Views/Shared/_KendoLayoutWithSideBar.cshtml";
}
@*Indicates records with different input method*@
<input id="manualIndicator" type="hidden" value="@(ViewBag.ManualIndicator ?? string.Empty)" />
<input id="manualCalcumated" type="hidden" value="@(ViewBag.ManualCalcumated ?? string.Empty)" />
<input id="manualSelfCalculated" type="hidden" value="@(ViewBag.ManualSelfCalculated ?? string.Empty)" />

<div class="row">
    <div class="col-md-10">
        <h2>@Resources.Layout.UnitsData</h2>
    </div>
    <div class="col-md-2">
        <button id="excel-export" class="k-button k-button-icontext k-grid-excel pull-right head-button"><span class="k-icon k-i-excel"></span>Експорт в Excel</button>
    </div>
</div>
@Html.ValidationSummary()
@Html.AntiForgeryToken()

@(Html.Kendo()
    .Grid<UnitDataViewModel>()
    .Name("units")
    .AutoBind(false)
    .Columns(
        columns =>
        {
            columns.Bound(c => c.UnitConfig.Code)
                          .ClientTemplate(
                Ajax.AuthorizedAjaxActionLinkOrText("#=data.UnitConfig.Code#", "Index", "History",
                                                new AjaxOptions() { HttpMethod = "Get", OnSuccess = "showRecordHistoriModal" },
                                                new { area = "RecordsHistory", id = "#=data.id#", entityName = "UnitsData" },
                                                new { data_ajax_mode = "replace", data_ajax_update = @"\#modal-dialog-body" })
                                                .ToHtmlString())
                .Width(75);
            columns.Bound(c => c.UnitConfig.ShiftProductType.Sort).Hidden(true).ClientGroupHeaderTemplate("#=value#");
            //columns.Bound(c => c.UnitConfig.ProcessUnit.ShortName).Width(100);
            columns.Bound(c => c.UnitConfig.ProcessUnitAlias).Width(100);
            columns.Bound(c => c.UnitConfig.Name).Width(250);
            columns.Bound(c => c.UnitConfig.Position).Width(140);
            columns.Bound(c => c.UnitConfig.MeasureUnit.Code).Width(80);
            columns.Bound(c => c.UnitConfig.CollectingDataMechanism).Title(string.Empty).Width(40);
            //columns.Bound(c => c.Value).Width(100).ClientTemplate("<div>#=data.Value==null?'':data.Value.toLocaleString(kendo.culture().name)#</div>");            
            columns.Bound(c => c.Value).Width(100).ClientTemplate("<div style='text-align:right;'>#=data.Value==null?'':kendo.toString(data.Value,'\\#\\#.\\#\\#\\#')#</div>");
            columns.Bound(c => c.UnitsManualData.Value).Width(100)
                .ClientTemplate(string.Format("{0}{2}{1}", "<div style='text-align:right;'>", "</div>",
                Ajax.AuthorizedAjaxActionLinkOrText("#=kendo.toString(data.UnitsManualData.Value,'\\#\\#.\\#\\#\\#')#", "Index", "History",
                                                new AjaxOptions() { HttpMethod = "Get", OnSuccess = "showRecordHistoriModal" },
                                                new { area = "RecordsHistory", id = "#=data.id#", entityName = "UnitsManualData" },
                                                new { data_ajax_mode = "replace", data_ajax_update = @"\#modal-dialog-body" })
                                                .ToHtmlString()));
            columns.Bound(c => c.UnitsManualData.EditReason).Width(200).ClientTemplate("#:UnitsManualData.EditReason.Name#")
                .ClientTemplate("<div class=row><div class='col-xs-2 no-horisontal-padding'><div class='#:UnitsManualData.EditReason.Id == 0? 'bg-ok':'bg-edited'#'></div></div><div class='col-xs-9 no-horisontal-padding reason'>#:UnitsManualData.EditReason.Name#</div></div>");
            columns.Bound(c => c.IsEditable).Visible(false);
            columns.Command(c => c.Edit()).Width(180);

        })
    .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(new[] { 10, 20, 50, 100 })
        .ButtonCount(5)
    )
    .Sortable()
    .Excel(excel => excel
        .FileName(@Resources.Layout.UnitsData + "_" + DateTime.Now + ".xlsx")
        .Filterable(true)
        .ProxyURL(Url.Action("Excel_Export_Save", "Ajax", new { area = "" }))
        .AllPages(true)
    )
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Scrollable(scr => scr.Height(640))
    .Filterable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(100)
        .ServerOperation(true)
        .Group(group => group.Add(c => c.UnitConfig.ShiftProductType.Sort))
        .Read(read => read.Action("ReadUnitsData", "Units", new { area = "ShiftReporting" }).Data("unitGridsData.SendDate"))
        .Update(update => update.Action("Edit", "Units", new { area = "ShiftReporting" }).Data("sendAntiForgery"))
        .Model(model =>
        {
            model.Id(p => p.Id);
            model.Field(p => p.UnitConfig.Code).Editable(false);
            model.Field(p => p.UnitConfig.ShiftProductType.Name).Editable(false);
            //model.Field(p => p.UnitConfig.ProcessUnit.ShortName).Editable(false);
            model.Field(p => p.UnitConfig.ProcessUnitAlias).Editable(false);
            model.Field(p => p.UnitConfig.Name).Editable(false);
            model.Field(p => p.UnitConfig.Position).Editable(false);
            model.Field(p => p.UnitConfig.MeasureUnit.Code).Editable(false);
            model.Field(p => p.UnitConfig.CollectingDataMechanism).Editable(false);
            model.Field(p => p.Value).Editable(false);
            model.Field(p => p.UnitsManualData.Value).Editable(true);
            model.Field(p => p.UnitsManualData.EditReason).Editable(true);
            model.Field(p => p.IsEditable).Editable(false);
        })
        .Events(events =>
        {
            events.Error("kendoAdditional.ErrorHandler");
            events.RequestEnd("unitGridsData.DataSave");
        })
    )
    .Events(ev => ev
    .DataBound("unitGridsData.DataBound")
        )
)

@* //Error window for kendo grid error event handler *@
<div id="err-window" style="display:none">@Html.Partial("_KendoGridErrorWindow")</div>
@* //Error window for kendo grid error event handler *@
<div id="success-window" style="display:none">@Html.Partial("_SuccessWindow")</div>


@section scripts{
    @Scripts.Render("~/bundles/custom/kendoadditional")
    @Scripts.Render("~/bundles/custom/unitGrids")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/custom/jquery-kendo-globalize.js")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
}
@section sidebar{
    @Html.Partial("_UnitsSideBar")
}
