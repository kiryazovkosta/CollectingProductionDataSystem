@using System.Web.Optimization;
@using CollectingProductionDataSystem.Web.ViewModels.Tank;
@using Resources = App_GlobalResources.Resources;
@model TankDataViewModel
@{
    Layout = "~/Views/Shared/_KendoLayoutWithSideBar.cshtml";
}
<div class="row">
    <div class="col-md-10">
        <h2>@Resources.Layout.TanksData</h2>
    </div>
    <div class="col-md-2">
        <button id="excel-export" class="k-button k-button-icontext k-grid-excel pull-right head-button"><span class="k-icon k-i-excel"></span>Експорт в Excel</button>
    </div>
</div>

@Html.ValidationSummary()
@Html.AntiForgeryToken()
@(Html.Kendo().Grid<TankDataViewModel>()
        .Name("tanks")
        .AutoBind(false)
        .Columns(columns =>
            {
                columns.Bound(c => c.RecordTimestamp).Format("{0:dd.MM.yyyy HH:mm}").Width(160);
                columns.Bound(c => c.ParkName);
                columns.Bound(c => c.TankName).Width(100);
                columns.Bound(c => c.ProductName);
                columns.Bound(c => c.LiquidLevel).Format("{0:n2}").Width(160);
                columns.Bound(c => c.ProductLevel).Format("{0:n2}").Width(160);
                columns.Bound(c => c.NetStandardVolume).Format("{0:n2}").Width(160);
                columns.Bound(c => c.ReferenceDensity).Format("{0:n2}").Width(160);
                columns.Bound(c => c.WeightInVacuum).Format("{0:n2}").Width(160);
                columns.Bound(c => c.FreeWaterLevel).Format("{0:n2}").Width(160);
            })
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(new[] { 10, 20, 50, 100 })
        .ButtonCount(5))
        .Sortable()
        .Excel(excel => excel
            .FileName(@Resources.Layout.TanksData + "_" + DateTime.Now + ".xlsx")
            .Filterable(true)
            .ProxyURL(Url.Action("Excel_Export_Save", "Tests", new { area = "" }))
            .AllPages(true)
        )
        .Scrollable(scr => scr.Height(660))
        .Filterable()
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .ServerOperation(true)
                    .Read(read => read.Action("ReadTanksData", "Tanks", new { area = "ShiftReporting" }).Data("unitGridsData.SendTanksData"))
        .Events(events =>
        {
            events.Error("kendoAdditional.ErrorHandler");
        }))

)

@* //Error window for kendo grid error event handler *@
<div id="err-window" style="display:none">@Html.Partial("_KendoGridErrorWindow")</div>
@* //Error window for kendo grid error event handler *@
<div id="success-window" style="display:none">@Html.Partial("_SuccessWindow")</div>

@section scripts{
    @Scripts.Render("~/bundles/custom/kendoadditional")
    @Scripts.Render("~/bundles/custom/unitGrids")
}

@section sidebar{
    @Html.Partial("_TanksSideBar")
}