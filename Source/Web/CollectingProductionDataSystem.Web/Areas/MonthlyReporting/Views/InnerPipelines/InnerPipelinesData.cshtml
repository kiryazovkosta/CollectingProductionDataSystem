@using System.Web.Optimization;
@using CollectingProductionDataSystem.Web.Areas.MonthlyReporting.ViewModels;
@using Resources = App_GlobalResources.Resources;

@model InnerPipelinesDataViewModel
@{
    Layout = "~/Views/Shared/_KendoLayoutWithSideBar.cshtml";
}
<div class="row">
    <div class="col-md-10">
        <h2>@Resources.Layout.InnerPipelinesData</h2>
    </div>
    <div class="col-md-2">
        <button id="excel-export" class="k-button k-button-icontext k-grid-excel pull-right head-button"><span class="k-icon k-i-excel"></span>Експорт в Excel</button>
    </div>
</div>
@{var now = DateTime.Now;}
@Html.ValidationSummary()
@Html.AntiForgeryToken()
@(Html.Kendo()
            .Grid<InnerPipelinesDataViewModel>()
            .Name("measuringpoints")
            .AutoBind(false)
            .Columns(
                columns =>
                {
                    //columns.Bound(c => c.Id).Width(100);
                    columns.Bound(c => c.RecordTimestamp).Width(200).Format("{0:MMMM yyyy}");
                    columns.ForeignKey(c => c.ProductId, (System.Collections.IEnumerable)ViewData["products"], "Id", "Name").EditorTemplateName("ProductViewModel").Width(400);
                    columns.Bound(c => c.Mass).Format("{0:n3}");
                    columns.Bound(c => c.Volume).Format("{0:n3}");
                    columns.Command(command => { command.Edit(); command.Destroy(); }).Width(230);
                })
            .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(new[] { 10, 20, 50, 100 })
                .ButtonCount(5)
            )
            .ToolBar(toolbar =>
              {
                  toolbar.Create();
              })
            .Editable(editable => editable.Mode(GridEditMode.InLine))
            .Sortable()
            .Excel(excel => excel
                .FileName(@Resources.Layout.UnitsData + "_" + DateTime.Now + ".xlsx")
                .Filterable(true)
                .ProxyURL(Url.Action("Excel_Export_Save", "Ajax", new { area = "" }))
                .AllPages(true)
            )
            .Scrollable(scr => scr.Height(640))
            .Filterable()
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(100)
                .ServerOperation(true)
                        .Read(read => read.Action("ReadInnerPipelinesData", "InnerPipelines", new { area = "MonthlyReporting" }).Data("unitGridsData.SendDate"))
                        .Create(create => create.Action("Create", "InnerPipelines", new { area = "MonthlyReporting" }).Data("sendAntiForgery"))
                        .Update(update => update.Action("Update", "InnerPipelines", new { area = "MonthlyReporting" }).Data("sendAntiForgery"))
                        .Destroy(destroy => destroy.Action("Destroy", "InnerPipelines", new { area = "MonthlyReporting" }).Data("sendAntiForgery"))
                .Model(model =>
                {
                    model.Id(p => p.Id);
                    model.Field(p => p.RecordTimestamp).Editable(false).DefaultValue(new DateTime(now.Year, now.Month, 1));
                    model.Field(p => p.ProductId).Editable(true);
                    model.Field(p => p.Mass).Editable(true);
                    model.Field(p => p.Volume).Editable(true);
                })
                .Events(events =>
                {
                    events.Error("kendoAdditional.ErrorHandler");
                    events.Change("kendoAdditional.OnChange");
                    events.RequestEnd("unitGridsData.DataSave");
                })
            )
            .Events(ev => ev
                .DataBound("unitGridsData.DataBound")
            )
)

@* //Error window for kendo grid error event handler *@
<div id="err-window" style="display:none">@Html.Partial("_KendoGridErrorWindow")</div>
@* //Error window for kendo grid error event handler *@
<div id="success-window" style="display:none">@Html.Partial("_SuccessWindow")</div>

@section scripts{
    @Scripts.Render("~/bundles/custom/kendoadditional")
    @Scripts.Render("~/bundles/custom/unitGrids")
    @Scripts.Render("~/Scripts/custom/renderDailyGraphic.min.js")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")
}
@section sidebar{
    @Html.Partial("_MonthSelectorSideBar")
}
